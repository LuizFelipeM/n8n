[
  {
    "createdAt": "2025-02-26T23:26:49.549Z",
    "updatedAt": "2025-04-15T00:41:02.672Z",
    "id": "kDn3fy9TjZLqHPvD",
    "name": "Manage Condominiums",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "1ngZmnnMroKObJFp58b2YNPOHtv4dT4xO",
            "mode": "list",
            "cachedResultName": "Condomínios",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1ngZmnnMroKObJFp58b2YNPOHtv4dT4xO"
          },
          "event": "folderCreated"
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          20,
          -140
        ],
        "id": "ea54a4ef-1b45-41e9-bb0d-695214e4e04a",
        "name": "Folder Created",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "1ngZmnnMroKObJFp58b2YNPOHtv4dT4xO",
            "mode": "list",
            "cachedResultName": "Condomínios",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1ngZmnnMroKObJFp58b2YNPOHtv4dT4xO"
          },
          "event": "folderUpdated"
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          20,
          560
        ],
        "id": "0ce8b35e-097b-4991-be42-b1da5d6e9759",
        "name": "Folder Updated",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "tableId": "condominiums",
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "id",
                "fieldValue": "={{ $json.folder_id }}"
              },
              {
                "fieldId": "name",
                "fieldValue": "={{ $json.name }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          480,
          -140
        ],
        "id": "2db8c61c-4724-4a25-96e8-a28f1dd3b054",
        "name": "Create Condominium",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "tableId": "condominiums",
          "matchType": "allFilters",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "condition": "eq",
                "keyValue": "={{ $json.folder_id }}"
              }
            ]
          },
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "name",
                "fieldValue": "={{ $json.name }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          380,
          560
        ],
        "id": "83982d38-c0d7-419c-9b2e-c1a1ccdf84cc",
        "name": "Update Condominium",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
                "name": "folder_id",
                "value": "={{ $json.id }}",
                "type": "string"
              },
              {
                "id": "c78ad88c-26fc-4440-ba1b-303147ea3dd8",
                "name": "name",
                "value": "={{ $json.name }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "e0a8ff17-cbe8-49f1-be87-ff8276c1706b",
        "name": "Set Updated Condominium",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          560
        ]
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
                "name": "folder_id",
                "value": "={{ $json.id }}",
                "type": "string"
              },
              {
                "id": "c78ad88c-26fc-4440-ba1b-303147ea3dd8",
                "name": "name",
                "value": "={{ $json.name }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "0f435e78-d2b9-468a-b2ae-ad71bf6b6181",
        "name": "Set Created Condominium",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          240,
          -140
        ]
      },
      {
        "parameters": {
          "content": "## Create Condominium flow\n\nThis workflow will be triggered when a folder is created under the *Condomínios* folder. It'll then sync the *Supabase* register with the folder to poll for updates.",
          "height": 220,
          "width": 300
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -240,
          -280
        ],
        "id": "8099397b-3032-49fe-bfcb-61fbab23fe36",
        "name": "Sticky Note4"
      },
      {
        "parameters": {
          "content": "## Update Condominium flow\n\nThis workflow will be triggered when a folder under the *Condomínios* folder is updated. It'll then sync the *Supabase* register with the folder to poll for updates and keep it .",
          "height": 220,
          "width": 300,
          "color": 5
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -240,
          420
        ],
        "id": "cb61e4ff-2bfa-4ba5-91cd-affa4cb51f07",
        "name": "Sticky Note"
      },
      {
        "parameters": {
          "jsCode": "function randomUUID() {\n  const uuid = new Array(36);\n  for (let i = 0; i < 36; i++) {\n    uuid[i] = Math.floor(Math.random() * 16);\n  }\n  uuid[14] = 4; // set bits 12-15 of time-high-and-version to 0100\n  uuid[19] = uuid[19] &= ~(1 << 2); // set bit 6 of clock-seq-and-reserved to zero\n  uuid[19] = uuid[19] |= (1 << 3); // set bit 7 of clock-seq-and-reserved to one\n  uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n  return uuid.map((x) => x.toString(16)).join('');\n}\n\nconst folderId = $('Create Condominium').first().json.id\nconst folderName = $('Create Condominium').first().json.name\n\nconst [x, y] = $input.first().json.nodes.at(-1).position\n\nconst fileCreatedNodeName = \"On File Created (\" + folderName + \")\"\nconst fileCreatedNode = {\n  parameters: {\n    pollTimes: {\n      item: [\n        {\n          mode: \"everyMinute\"\n        }\n      ]\n    },\n    triggerOn: \"specificFolder\",\n    folderToWatch: {\n      __rl: true,\n      value: folderId,\n      mode: \"id\",\n    },\n    event: \"fileCreated\",\n    options: {}\n  },\n  type: \"n8n-nodes-base.googleDriveTrigger\",\n  typeVersion: 1,\n  position: [\n    x,\n    y + 200\n  ],\n  id: randomUUID(),\n  name: fileCreatedNodeName,\n  credentials: {\n    googleDriveOAuth2Api: {\n      id: \"AK6Ai2Pd7cZvY6gL\",\n      name: \"Google Drive account\"\n    }\n  }\n}\nconst fileCreatedNodeConnection = {\n  [fileCreatedNodeName]: {\n    main: [\n      [\n        {\n          node: \"Ingest Files\",\n          type: \"main\",\n          index: 0\n        }\n      ]\n    ]\n  }\n}\n\nconst fileUpdatedNodeName = \"On File Updated (\" + folderName + \")\"\nconst fileUpdatedNode = {\n  parameters: {\n    pollTimes: {\n      item: [\n        {\n          mode: \"everyMinute\"\n        }\n      ]\n    },\n    triggerOn: \"specificFolder\",\n    folderToWatch: {\n      __rl: true,\n      value: folderId,\n      mode: \"id\"\n    },\n    event: \"fileUpdated\",\n    options: {}\n  },\n  type: \"n8n-nodes-base.googleDriveTrigger\",\n  typeVersion: 1,\n  position: [\n    x,\n    y + 350\n  ],\n  id: randomUUID(),\n  name: fileUpdatedNodeName,\n  credentials: {\n    googleDriveOAuth2Api: {\n      id: \"AK6Ai2Pd7cZvY6gL\",\n      name: \"Google Drive account\"\n    }\n  }\n}\nconst fileUpdatedNodeConnection = {\n  [fileUpdatedNodeName]: {\n    main: [\n      [\n        {\n          node: \"Ingest Files\",\n          type: \"main\",\n          index: 0\n        }\n      ]\n    ]\n  }\n}\n\nconst updatedWorkflow = {\n  name: $input.first().json.name,\n  nodes: [\n    ...$input.first().json.nodes,\n    fileCreatedNode,\n    fileUpdatedNode\n  ],\n  connections: {\n    ...$input.first().json.connections,\n    ...fileCreatedNodeConnection,\n    ...fileUpdatedNodeConnection\n  },\n  settings: $input.first().json.settings\n}\n\nreturn [updatedWorkflow];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          920,
          -140
        ],
        "id": "7f105080-5877-405e-a9a9-08fa9c6f37b0",
        "name": "Add new Watch Node"
      },
      {
        "parameters": {
          "operation": "get",
          "workflowId": {
            "__rl": true,
            "value": "XXmG7fsFAe68u0lM",
            "mode": "list",
            "cachedResultName": "Folder Watch (#XXmG7fsFAe68u0lM)"
          },
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.n8n",
        "typeVersion": 1,
        "position": [
          700,
          -140
        ],
        "id": "37423ef5-1c06-4bf9-a151-08f45c252af2",
        "name": "Get Folder Watch Workflow",
        "credentials": {
          "n8nApi": {
            "id": "85czAB48YvRM2pH9",
            "name": "n8n account"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "workflowId": {
            "__rl": true,
            "value": "={{ $('Get Folder Watch Workflow').item.json.id }}",
            "mode": "id"
          },
          "workflowObject": "={{ $json.toJsonString() }}",
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.n8n",
        "typeVersion": 1,
        "position": [
          1140,
          -140
        ],
        "id": "d802af01-1204-4472-87e4-4beb3c01c74e",
        "name": "Update Folder Watch Workflow",
        "credentials": {
          "n8nApi": {
            "id": "85czAB48YvRM2pH9",
            "name": "n8n account"
          }
        }
      },
      {
        "parameters": {
          "operation": "activate",
          "workflowId": {
            "__rl": true,
            "value": "={{ $('Get Folder Watch Workflow').item.json.id }}",
            "mode": "id"
          },
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.n8n",
        "typeVersion": 1,
        "position": [
          1360,
          -140
        ],
        "id": "ad234453-0322-490a-b068-10b3fcd2ca15",
        "name": "Activate Workflow",
        "credentials": {
          "n8nApi": {
            "id": "85czAB48YvRM2pH9",
            "name": "n8n account"
          }
        }
      },
      {
        "parameters": {
          "operation": "move",
          "fileId": {
            "__rl": true,
            "value": "={{ $('Create Moradores File').item.json.spreadsheetId }}",
            "mode": "id"
          },
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "={{ $('Set Created Condominium').item.json.folder_id }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          1140,
          -380
        ],
        "id": "9e94b0f9-7c54-417d-a6da-a0391a73d8b2",
        "name": "Move Moradores to Condominium Folder",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "resource": "spreadsheet",
          "title": "Moradores",
          "sheetsUi": {
            "sheetValues": [
              {
                "title": "moradores"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          480,
          -380
        ],
        "id": "85b09080-29b3-481e-9679-3eccda83b6ff",
        "name": "Create Moradores File",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "Ux5zp2OjjsEzZ5aa",
            "name": "Google Sheets account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "764e3673-45c0-43cd-b2bc-7ad034616303",
                "name": "NIF",
                "value": "",
                "type": "string"
              },
              {
                "id": "d1dab207-ab9a-45e0-9285-374eefaf0fc8",
                "name": "Nome",
                "value": "",
                "type": "string"
              },
              {
                "id": "e692c570-c592-4222-8c75-b54421e47651",
                "name": "Número de Telefone",
                "value": "",
                "type": "string"
              },
              {
                "id": "1d5f4807-50ab-4643-8d4b-cc1b51ec5b51",
                "name": "Data de nascimento",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          700,
          -380
        ],
        "id": "3b798710-0e2a-4897-bdd9-479b2d209d31",
        "name": "Set Headers"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "e2210c65-fbcb-4bd9-9513-f22c21fb7726",
                "name": "condominium_id",
                "value": "={{ $('Create Condominium').item.json.id }}",
                "type": "string"
              },
              {
                "id": "2a9a02ca-0b19-48bb-8359-00bb6b640e40",
                "name": "jira_id",
                "value": "={{ $json.options[0].id }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1140,
          100
        ],
        "id": "3e1b5acf-81c0-46d5-9481-c6fb4f12d20d",
        "name": "Set Jira to Condominium"
      },
      {
        "parameters": {
          "operation": "update",
          "tableId": "condominiums",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "condition": "eq",
                "keyValue": "={{ $json.condominium_id }}"
              }
            ]
          },
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "jira_id",
                "fieldValue": "={{ $json.jira_id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1360,
          100
        ],
        "id": "11d58b57-59d7-4967-9a83-df1a00bf6558",
        "name": "Update Condominium jira_id",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://dltagg.atlassian.net/rest/api/3/filter",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n    \"name\": \"{{ $json.options[0].value }}\",\n    \"description\": \"Exibe itens que estão associados ao condomínio {{ $json.options[0].value }}\",\n    \"jql\": \"cf[{{ $('Set Jira Data').item.json.custom_field_id }}] = \\\"{{ $json.options[0].value }}\\\"\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"project\",\n            \"project\": {\n                \"id\": {{ $('Set Jira Data').item.json.project_id }}\n            }\n        }\n    ]\n}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1140,
          300
        ],
        "id": "58898883-bd9b-4e72-b3eb-8c001ab3debc",
        "name": "Create Custom Filter",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "=https://dltagg.atlassian.net/rest/api/3/field/customfield_{{ $json.custom_field_id }}/context/{{ $json.context_id }}/option",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"options\": [\n    {\n      \"disabled\": false,\n      \"value\": \"{{ $('Create Condominium').item.json.name }}\"\n    }\n  ]\n}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          920,
          100
        ],
        "id": "cc993d01-4d42-454f-a3a3-7ec7e57e6b2e",
        "name": "Create Custom Field Options (context)",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6b492e52-4d2f-4d17-880f-7ac6498a9a9e",
                "name": "project_id",
                "value": "10002",
                "type": "string"
              },
              {
                "id": "64f2eb55-7ece-46d4-b901-8f2cf6b856e4",
                "name": "custom_field_id",
                "value": 10124,
                "type": "number"
              },
              {
                "id": "e428907c-0216-4a15-9c20-e8134a380d4f",
                "name": "context_id",
                "value": 10225,
                "type": "number"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          700,
          100
        ],
        "id": "05ebd94b-48a8-4acf-94a4-0a44c2c9115b",
        "name": "Set Jira Data"
      },
      {
        "parameters": {
          "operation": "append",
          "documentId": {
            "__rl": true,
            "value": "={{ $('Create Moradores File').item.json.spreadsheetId }}",
            "mode": "id"
          },
          "sheetName": {
            "__rl": true,
            "value": "={{ $('Create Moradores File').item.json.sheets[0].properties.sheetId }}",
            "mode": "id"
          },
          "columns": {
            "mappingMode": "autoMapInputData",
            "value": {},
            "matchingColumns": [],
            "schema": [
              {
                "id": "NIF",
                "displayName": "NIF",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "Nome",
                "displayName": "Nome",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "Número de Telefone",
                "displayName": "Número de Telefone",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "Data de nascimento",
                "displayName": "Data de nascimento",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          920,
          -380
        ],
        "id": "ac0897c3-aaec-479b-ad07-231a2a138622",
        "name": "Add Headers to Moradores File",
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "Ux5zp2OjjsEzZ5aa",
            "name": "Google Sheets account"
          }
        }
      }
    ],
    "connections": {
      "Folder Created": {
        "main": [
          [
            {
              "node": "Set Created Condominium",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Folder Updated": {
        "main": [
          [
            {
              "node": "Set Updated Condominium",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create Condominium": {
        "main": [
          [
            {
              "node": "Get Folder Watch Workflow",
              "type": "main",
              "index": 0
            },
            {
              "node": "Set Jira Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Updated Condominium": {
        "main": [
          [
            {
              "node": "Update Condominium",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Created Condominium": {
        "main": [
          [
            {
              "node": "Create Moradores File",
              "type": "main",
              "index": 0
            },
            {
              "node": "Create Condominium",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add new Watch Node": {
        "main": [
          [
            {
              "node": "Update Folder Watch Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Folder Watch Workflow": {
        "main": [
          [
            {
              "node": "Add new Watch Node",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Folder Watch Workflow": {
        "main": [
          [
            {
              "node": "Activate Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Move Moradores to Condominium Folder": {
        "main": [
          []
        ]
      },
      "Create Moradores File": {
        "main": [
          [
            {
              "node": "Set Headers",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Headers": {
        "main": [
          [
            {
              "node": "Add Headers to Moradores File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Jira to Condominium": {
        "main": [
          [
            {
              "node": "Update Condominium jira_id",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create Custom Field Options (context)": {
        "main": [
          [
            {
              "node": "Set Jira to Condominium",
              "type": "main",
              "index": 0
            },
            {
              "node": "Create Custom Filter",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Jira Data": {
        "main": [
          [
            {
              "node": "Create Custom Field Options (context)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add Headers to Moradores File": {
        "main": [
          [
            {
              "node": "Move Moradores to Condominium Folder",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Folder Created": {
        "lastTimeChecked": "2025-04-24T10:55:12Z"
      },
      "node:Folder Updated": {
        "lastTimeChecked": "2025-04-24T10:55:12Z"
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "Set Jira to Condominium": [
        {
          "json": {
            "condominium_id": "1LOLzPfGPmHxr_NcZjh3X9WOL1mM1Cnuk",
            "jira_id": "10089"
          }
        }
      ],
      "Folder Created": [
        {
          "json": {
            "kind": "drive#file",
            "copyRequiresWriterPermission": false,
            "writersCanShare": true,
            "viewedByMe": true,
            "mimeType": "application/vnd.google-apps.folder",
            "parents": [
              "1ngZmnnMroKObJFp58b2YNPOHtv4dT4xO"
            ],
            "iconLink": "https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.folder",
            "shared": false,
            "lastModifyingUser": {
              "displayName": "Luiz Moura",
              "kind": "drive#user",
              "me": true,
              "permissionId": "13222640052300274131",
              "emailAddress": "luiz.moura@dltagg.com",
              "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64"
            },
            "owners": [
              {
                "displayName": "Luiz Moura",
                "kind": "drive#user",
                "me": true,
                "permissionId": "13222640052300274131",
                "emailAddress": "luiz.moura@dltagg.com",
                "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64"
              }
            ],
            "webViewLink": "https://drive.google.com/drive/folders/105nc63fgWYq1ZLnNUS47CH7ngerwSsT5",
            "viewersCanCopyContent": true,
            "permissions": [
              {
                "id": "13222640052300274131",
                "displayName": "Luiz Moura",
                "type": "user",
                "kind": "drive#permission",
                "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64",
                "emailAddress": "luiz.moura@dltagg.com",
                "role": "owner",
                "deleted": false,
                "pendingOwner": false
              }
            ],
            "hasThumbnail": false,
            "spaces": [
              "drive"
            ],
            "folderColorRgb": "#8f8f8f",
            "id": "105nc63fgWYq1ZLnNUS47CH7ngerwSsT5",
            "name": "Condo C",
            "starred": false,
            "trashed": false,
            "explicitlyTrashed": false,
            "createdTime": "2025-04-01T12:17:30.690Z",
            "modifiedTime": "2025-04-01T12:17:30.690Z",
            "modifiedByMeTime": "2025-04-01T12:17:30.690Z",
            "viewedByMeTime": "2025-04-01T12:17:30.690Z",
            "quotaBytesUsed": "0",
            "version": "2",
            "ownedByMe": true,
            "isAppAuthorized": false,
            "capabilities": {
              "canChangeViewersCanCopyContent": false,
              "canEdit": true,
              "canCopy": false,
              "canComment": true,
              "canAddChildren": true,
              "canDelete": true,
              "canDownload": true,
              "canListChildren": true,
              "canRemoveChildren": true,
              "canRename": true,
              "canTrash": true,
              "canReadRevisions": false,
              "canChangeCopyRequiresWriterPermission": false,
              "canMoveItemIntoTeamDrive": true,
              "canUntrash": true,
              "canModifyContent": true,
              "canMoveItemOutOfDrive": true,
              "canAddMyDriveParent": false,
              "canRemoveMyDriveParent": true,
              "canMoveItemWithinDrive": true,
              "canShare": true,
              "canMoveChildrenWithinDrive": true,
              "canModifyContentRestriction": false,
              "canChangeSecurityUpdateEnabled": false,
              "canAcceptOwnership": false,
              "canReadLabels": false,
              "canModifyLabels": false,
              "canModifyEditorContentRestriction": false,
              "canModifyOwnerContentRestriction": false,
              "canRemoveContentRestriction": false,
              "canDisableInheritedPermissions": true,
              "canEnableInheritedPermissions": true
            },
            "thumbnailVersion": "0",
            "modifiedByMe": true,
            "permissionIds": [
              "13222640052300274131"
            ],
            "linkShareMetadata": {
              "securityUpdateEligible": false,
              "securityUpdateEnabled": true
            },
            "inheritedPermissionsDisabled": false
          }
        }
      ],
      "Create Custom Field Options (context)": [
        {
          "json": {
            "options": [
              {
                "id": "10153",
                "value": "Condo C",
                "disabled": false
              }
            ]
          }
        }
      ],
      "Set Jira Data": [
        {
          "json": {
            "custom_field_id": 10124,
            "context_id": 10225
          }
        }
      ]
    },
    "versionId": "a12375c9-3c4f-4881-ad83-3870d4c2d7d0",
    "triggerCount": 2,
    "tags": []
  },
  {
    "createdAt": "2025-03-05T11:52:21.735Z",
    "updatedAt": "2025-04-02T13:51:04.647Z",
    "id": "E6kg0EcZ451yqspi",
    "name": "RAG Agent",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "model": "gpt-4o-mini-2024-07-18",
          "options": {}
        },
        "id": "944f5368-86c2-4815-91af-fc7c931530b8",
        "name": "OpenAI Chat Model",
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1,
        "position": [
          480,
          500
        ],
        "credentials": {
          "openAiApi": {
            "id": "6VoSug2Bcrcb4Pd3",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "sessionIdType": "customKey",
          "sessionKey": "={{ $('When Executed by Another Workflow').item.json.user_id }}",
          "tableName": "chat_histories"
        },
        "id": "b8bd8906-6eff-456a-8555-cf210184f3c6",
        "name": "Postgres Chat Memory",
        "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "typeVersion": 1,
        "position": [
          140,
          240
        ],
        "notesInFlow": false,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={{ $('When Executed by Another Workflow').item.json.message || \"Esse é um primeiro contrato, por favor se apresente polidamente\" }}",
          "options": {
            "systemMessage": "={{ $json.system_message }}"
          }
        },
        "id": "dc90cf6d-c4c3-47de-9c5b-d33b805222f1",
        "name": "RAG AI Agent",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 1.6,
        "position": [
          480,
          -20
        ]
      },
      {
        "parameters": {
          "descriptionType": "manual",
          "toolDescription": "={{ $json.list_documents }}",
          "operation": "select",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "condominium_document_metadata",
            "mode": "list",
            "cachedResultName": "condominium_document_metadata"
          },
          "returnAll": true,
          "options": {}
        },
        "type": "n8n-nodes-base.postgresTool",
        "typeVersion": 2.5,
        "position": [
          280,
          240
        ],
        "id": "9c9b392d-0e51-4397-8613-5292a27c40af",
        "name": "List Documents",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "descriptionType": "manual",
          "toolDescription": "={{ $json.get_file_contents }}",
          "operation": "executeQuery",
          "query": "SELECT \n    string_agg(content, ' ') as document_text\nFROM condominium_documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';",
          "options": {
            "queryReplacement": "={{ $fromAI('file_id') }}"
          }
        },
        "type": "n8n-nodes-base.postgresTool",
        "typeVersion": 2.5,
        "position": [
          420,
          240
        ],
        "id": "664c158b-efff-4eea-a281-c3fe0ba99d5d",
        "name": "Get File Contents",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "descriptionType": "manual",
          "toolDescription": "={{ $json.query_document_rows }}",
          "operation": "executeQuery",
          "query": "{{ $fromAI('sql_query') }}",
          "options": {}
        },
        "type": "n8n-nodes-base.postgresTool",
        "typeVersion": 2.5,
        "position": [
          560,
          240
        ],
        "id": "4151312e-5a8a-4fc9-9e04-6759a2963600",
        "name": "Query Document Rows",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "mode": "retrieve-as-tool",
          "toolName": "documents",
          "toolDescription": "Use RAG para buscar informações na base de conhecimento.",
          "tableName": {
            "__rl": true,
            "value": "condominium_documents",
            "mode": "list",
            "cachedResultName": "condominium_documents"
          },
          "topK": 5,
          "options": {
            "queryName": "match_documents",
            "metadata": {
              "metadataValues": [
                {
                  "name": "condominium_id",
                  "value": "={{ $json.condominium_id }}"
                }
              ]
            }
          }
        },
        "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "typeVersion": 1,
        "position": [
          1140,
          180
        ],
        "id": "58b8f3b8-a661-40a1-832b-4ad61007ffef",
        "name": "Supabase RAG Vector Store",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "inputSource": "jsonExample",
          "jsonExample": "{\n  \"message\": \"Message Body\",\n  \"user_id\": 123,\n  \"user_name\": \"User Name\",\n  \"user_phone_number\": \"551140028922\",\n  \"user_brithdate\": \"2000-01-01T00:00:00.000Z\",\n  \"condominium_id\": \"1dxCikZ3WPMDvaPL_K7UpMsgswonwdG_k\",\n  \"condominium_name\": \"Condominium Name\"\n}"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -60,
          -20
        ],
        "id": "70c51d09-c047-4ec1-9a15-65253ef11d75",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "665d2119-9e6c-4022-ad80-965a5599bc11",
                "name": "body",
                "value": "={{ $json.output }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          940,
          -140
        ],
        "id": "b1389555-0b78-4d5b-90e7-c6799b4b03d6",
        "name": "Set Response"
      },
      {
        "parameters": {
          "name": "documents",
          "description": "={{ $json.answer_questions_with_a_vector_store }}",
          "topK": 10
        },
        "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
        "typeVersion": 1,
        "position": [
          840,
          180
        ],
        "id": "c612bfde-2fbe-42bf-adac-358fce0d507a",
        "name": "Answer questions with a vector store"
      },
      {
        "parameters": {
          "tableName": {
            "__rl": true,
            "value": "condominium_documents",
            "mode": "list",
            "cachedResultName": "condominium_documents"
          },
          "options": {
            "queryName": "match_documents",
            "metadata": {
              "metadataValues": [
                {
                  "name": "condominium_id",
                  "value": "={{ $('When Executed by Another Workflow').item.json.condominium_id }}"
                }
              ]
            }
          }
        },
        "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "typeVersion": 1,
        "position": [
          840,
          360
        ],
        "id": "970f7d36-5661-4592-b86a-fa2ec1399548",
        "name": "Supabase Vector Store",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {},
        "type": "@n8n/n8n-nodes-langchain.toolCalculator",
        "typeVersion": 1,
        "position": [
          700,
          240
        ],
        "id": "7c1fb939-85e1-44ab-ae25-90a72330dbef",
        "name": "Calculator"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "typeVersion": 1.2,
        "position": [
          920,
          520
        ],
        "id": "97638523-f348-4715-8015-9de317317afd",
        "name": "Embeddings OpenAI",
        "credentials": {
          "openAiApi": {
            "id": "6VoSug2Bcrcb4Pd3",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "37731f2e-b97e-45bd-a335-58624ff9931c",
                "name": "system_message",
                "value": "=Você é um assistente virtual que se comunica por WhatsApp do Mistercondo, e ajuda a responder perguntas e dúvidas dos moradores do condomínio {{ $json.condominium_name }}.\n\nSuas respostas sempre devem se basear nos documentos do condomínio e você deve referenciar as fontes utilizadas, informando nome do documento e sempre que possível seu link, que está na coluna 'url' da tabela 'condominium_document_metadata'. Os documentos sempre serão baseados em texto (txt, docs, extrações de pdfs, etc.) ou dados tabulares (CSVs, Documentos Excel, etc.).\n\nFoi lhe dado ferramentas para realizar RAG na tabela de 'condominium_documents', olhe os documentos disponíveis na sua base de conhecimento baseado na tabela 'condominium_document_metadata', extraia todo o texto do documento, e busque os arquivos tabulares com SQL na tabela 'condominium_document_rows'.\n\nSempre inicie utilizando o RAG a não ser que o documento para responder a pergunta seja um documento tabular, ou se houver a necessidade de algum recurso SQL como sum, avg entre outros. Se o RAG não ajudar então olhe nos documentos que estão disponíveis para você e separe alguns que acredita que contenham a resposta e os analise.\n\nSe atenha ao assunto, não responda perguntas fora do escopo de condomínio. Quando não souber a resposta informe ao morador, não responda o que não souber, caso não tenha entendido mais de 2 vezes informe que irá transferir para um atendente humano.\n\nNesse momento você está conversando com {{ $json.user_name }}, dono do número de celular {{ $json.user_phone_number }} {{ $if($json.user_brithdate, \"e nascido em \" + $json.user_brithdate, \"\") }}.",
                "type": "string"
              },
              {
                "id": "a423210f-21db-4717-a765-ffa547315dd7",
                "name": "list_documents",
                "value": "Use esta ferramenta para buscar todos os documentos disponíveis, incluindo o schema das tabelas se o arquivo for do tipo XLSX, CSV, Excel ou outro dado tabular.",
                "type": "string"
              },
              {
                "id": "f2be6fd8-13f1-4f73-bcf7-e75d3373f08e",
                "name": "get_file_contents",
                "value": "Dado o ID do arquivo, busque o texto do documento.",
                "type": "string"
              },
              {
                "id": "a717d4a7-76a4-4e4b-a92d-ae8e6b2c29db",
                "name": "query_document_rows",
                "value": "Executa uma query SQL - use esta ferramenta para buscar da tabela condominium_document_rows uma vez que você souber o ID do documento que está buscando. dataset_id é o file_id e você deve sempre utilizar o row_data para filtrar, row_data é uma campo jsonb que possui todas as chaves do schema do documento encontrados na tabela condominium_document_metadata.\n\nExemplo de query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM condominium_document_rows\nWHERE dataset_id = '123';\n\nExemplo de query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM condominium_document_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';",
                "type": "string"
              },
              {
                "id": "096dab0b-c3d3-4b1d-ae1a-f7401b715c45",
                "name": "answer_questions_with_a_vector_store",
                "value": "Use RAG para buscar informações na base de documentos disponível do condomínio.",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          220,
          -20
        ],
        "id": "e4409944-fc9f-42b4-b139-161a5cb1c50f",
        "name": "Set Prompts (editable)"
      }
    ],
    "connections": {
      "OpenAI Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_languageModel",
              "index": 0
            },
            {
              "node": "Answer questions with a vector store",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Postgres Chat Memory": {
        "ai_memory": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "RAG AI Agent": {
        "main": [
          [
            {
              "node": "Set Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "List Documents": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Get File Contents": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Query Document Rows": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Supabase RAG Vector Store": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Set Prompts (editable)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Answer questions with a vector store": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Supabase Vector Store": {
        "ai_vectorStore": [
          [
            {
              "node": "Answer questions with a vector store",
              "type": "ai_vectorStore",
              "index": 0
            }
          ]
        ]
      },
      "Calculator": {
        "ai_tool": [
          [
            {
              "node": "RAG AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Embeddings OpenAI": {
        "ai_embedding": [
          [
            {
              "node": "Supabase Vector Store",
              "type": "ai_embedding",
              "index": 0
            },
            {
              "node": "Supabase RAG Vector Store",
              "type": "ai_embedding",
              "index": 0
            }
          ]
        ]
      },
      "Set Prompts (editable)": {
        "main": [
          [
            {
              "node": "RAG AI Agent",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "json": {
            "user_id": 1,
            "user_name": "Luiz",
            "user_phone_number": "5511976217868",
            "user_brithdate": "1999-09-11T00:00:00.000Z",
            "condominium_id": "1dxCikZ3WPMDvaPL_K7UpMsgswonwdG_k",
            "condominium_name": "Condo 2"
          }
        }
      ]
    },
    "versionId": "3d5d5a05-cdf3-483a-a68d-1f5608bf388c",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-02-21T15:18:15.331Z",
    "updatedAt": "2025-04-23T11:35:37.952Z",
    "id": "wvouDHyYBmxX2dGa",
    "name": "Chatbot",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "updates": [
            "messages"
          ]
        },
        "type": "n8n-nodes-base.whatsAppTrigger",
        "typeVersion": 1,
        "position": [
          -140,
          -420
        ],
        "id": "82102a2d-c4da-4596-b6b1-d54215ffd84b",
        "name": "WhatsApp Trigger",
        "webhookId": "6b904858-904d-49ec-95cd-80534c95c2a5",
        "credentials": {
          "whatsAppTriggerApi": {
            "id": "9WLt2swdvEL3wxdd",
            "name": "WhatsApp OAuth account"
          }
        }
      },
      {
        "parameters": {
          "content": "## WhatsApp flow\n\nThe WhatsApp is the main entrypoint for the AI Agent communication. The AI Agent will look for condominium documents in the *Supabase* and give responses appropriatly.",
          "height": 220,
          "width": 280,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -380,
          -560
        ],
        "id": "c0833101-f48d-4bbc-ab0c-3d00b7f6fd8a",
        "name": "Sticky Note3"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "2904e519-5f7a-41ae-86cd-82fd6dd2ab7e",
                "leftValue": "={{ $json.messages }}",
                "rightValue": "",
                "operator": {
                  "type": "array",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          60,
          -420
        ],
        "id": "421a66ca-d402-4ee0-8c7a-09c013bb18b8",
        "name": "If has messages"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "select\n  u.*,\n  c.name as condominium_name,\n  csm.active_session_type\nfrom users u\njoin condominiums c on c.id = u.condominium_id\nleft join chat_session_metadata csm on csm.user_id = u.id\nwhere u.phone_number = $1;",
          "options": {
            "queryReplacement": "='{{ $json.contacts[0].wa_id }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          300,
          -420
        ],
        "id": "ca827491-a72d-4518-af4c-6a56e1379adb",
        "name": "Get Current User",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "loose",
              "version": 2
            },
            "conditions": [
              {
                "id": "54f5bf7f-3451-4868-b013-da180a4ddf20",
                "leftValue": "={{ $json.current_user }}",
                "rightValue": "",
                "operator": {
                  "type": "object",
                  "operation": "exists",
                  "singleValue": true
                }
              },
              {
                "id": "d942495a-42b1-43a4-9c65-23f34b48e628",
                "leftValue": "={{ $json.current_user.id }}",
                "rightValue": 0,
                "operator": {
                  "type": "number",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "looseTypeValidation": true,
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          700,
          -420
        ],
        "id": "a53e13f0-604a-4b44-b9a2-4d5bcaeb0b65",
        "name": "If Current User exists"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "a88c8c7d-7d85-4d45-b87a-e514c20a3184",
                      "leftValue": "={{ $json.current_user.active_session_type }}",
                      "rightValue": "create_ticket",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Create Ticket"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "a3bc6915-4335-436e-a8dc-ace0f6a41f8e",
                      "leftValue": "={{ $json.current_user.active_session_type }}",
                      "rightValue": "ask_questions",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Ask Questions"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "a0f73563-579a-4f56-b5ea-8fb8a4bbbc95",
                      "leftValue": "={{ $json.current_user.active_session_type }}",
                      "rightValue": "feedback",
                      "operator": {
                        "type": "string",
                        "operation": "contains"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Feedback"
              }
            ]
          },
          "options": {
            "fallbackOutput": "extra",
            "ignoreCase": true
          }
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          1800,
          -780
        ],
        "id": "04fc15c3-cd70-42e0-add6-ad99ced60bed",
        "name": "Switch by Message Type"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "E6kg0EcZ451yqspi",
            "mode": "list",
            "cachedResultName": "RAG Agent"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "message": "={{ $json.message_body }}",
              "condominium_name": "={{ $json.current_user.condominium_name }}",
              "user_brithdate": "={{ $json.current_user.birthdate }}",
              "user_phone_number": "={{ $json.current_user.phone_number }}",
              "user_name": "={{ $json.current_user.name }}",
              "condominium_id": "={{ $json.current_user.condominium_id }}",
              "user_id": "={{ $json.current_user.id }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "message",
                "displayName": "message",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "number",
                "removed": false
              },
              {
                "id": "user_name",
                "displayName": "user_name",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "user_phone_number",
                "displayName": "user_phone_number",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "user_brithdate",
                "displayName": "user_brithdate",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "condominium_id",
                "displayName": "condominium_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "condominium_name",
                "displayName": "condominium_name",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              }
            ],
            "attemptToConvertTypes": true,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          2460,
          -820
        ],
        "id": "5bdc7e2a-7d7c-4106-932f-f90ad1ef5e6d",
        "name": "Execute RAG Agent Workflow"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "420df13d-9d99-476c-8765-ab7c45fdc0f5",
                "leftValue": "={{ $('Set Received Info').item.json.current_user.active_session_type }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          980,
          -800
        ],
        "id": "dcdee524-7a46-40a0-8ab7-e727739211c8",
        "name": "If has Active Session Type"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "834dcd15-cfbe-4475-a3c2-28eb0d8889f4",
                "leftValue": "={{ $('Set Received Info').item.json.is_interactive_message }}",
                "rightValue": "button_reply",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                }
              }
            ],
            "combinator": "or"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          980,
          -500
        ],
        "id": "991d2b97-5401-42d4-814b-c01bd7724186",
        "name": "If is Interactive Message"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "aa39c63b-ac14-4576-a76a-a259c6085462",
                "name": "system_phone_number_id",
                "value": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
                "type": "string"
              },
              {
                "id": "d706b13d-3304-4c1e-a32d-781b42d44bc0",
                "name": "is_interactive_message",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].type === \"interactive\" }}",
                "type": "boolean"
              },
              {
                "id": "95bf2d22-d46b-4058-a8f0-27c12a46ae2d",
                "name": "message_type",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive?.type ?? $('WhatsApp Trigger').item.json.messages[0].type }}",
                "type": "string"
              },
              {
                "id": "d94bf274-23ca-4879-9d35-ed5ed3f6842f",
                "name": "message_id",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0]?.interactive?.button_reply?.id || $('WhatsApp Trigger').item.json.messages[0].interactive?.list_reply?.id }}",
                "type": "string"
              },
              {
                "id": "1c41783b-75e2-49c1-8739-26f7c2615650",
                "name": "message_body",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0]?.text?.body || $('WhatsApp Trigger').item.json.messages[0].interactive?.list_reply?.title || $('WhatsApp Trigger').item.json.messages[0].image.caption }}",
                "type": "string"
              },
              {
                "id": "2471595f-1419-46ab-bb54-27014110de43",
                "name": "current_user",
                "value": "={{ $json }}",
                "type": "object"
              },
              {
                "id": "3f593fe7-d42e-4336-b5c9-6b8cc2447ad5",
                "name": "image",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].image }}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          500,
          -420
        ],
        "id": "22954cb5-8c54-451e-851c-4acd56d95149",
        "name": "Set Received Info"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "40d88cf7-c208-4d6b-b2a2-e5c19262103d",
                "name": "message_type",
                "value": "=information_not_found.{{ $json.message_type }}",
                "type": "string"
              },
              {
                "id": "e7a349e5-3f07-479a-af13-02da685ceaca",
                "name": "current_user",
                "value": "={{ $('Set Received Info').item.json.current_user }}",
                "type": "object"
              },
              {
                "id": "110aeaab-a1b9-4af8-bb7a-0f88adab9a72",
                "name": "message_id",
                "value": "={{ $json.message_id }}",
                "type": "string"
              },
              {
                "id": "6fbbddec-ae31-41de-8793-42e5b9533431",
                "name": "message_body",
                "value": "={{ $json.message_body }}",
                "type": "string"
              },
              {
                "id": "aa6699e3-089f-4f8d-95c5-cbf18d2c7e36",
                "name": "system_phone_number_id",
                "value": "={{ $json.system_phone_number_id }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1840,
          -120
        ],
        "id": "c3cc7c07-53bf-4b58-a0e5-93747102323c",
        "name": "Information Not Found Response"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "B3UwefI9UdmLm3Od",
            "mode": "list",
            "cachedResultName": "Create Jira Ticket"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "message_id": "={{ $json.message_id }}",
              "message_type": "={{ $json.message_type }}",
              "message_body": "={{ $json.message_body }}",
              "current_user": "={{ $json.current_user }}",
              "image": "={{ $json.image }}"
            },
            "matchingColumns": [
              "user_id"
            ],
            "schema": [
              {
                "id": "message_id",
                "displayName": "message_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_type",
                "displayName": "message_type",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_body",
                "displayName": "message_body",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "current_user",
                "displayName": "current_user",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "object",
                "removed": false
              },
              {
                "id": "image",
                "displayName": "image",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "object",
                "removed": false
              }
            ],
            "attemptToConvertTypes": true,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          2460,
          -1020
        ],
        "id": "d1773b12-c2d6-4f48-a98d-1ad89a035d95",
        "name": "Execute Create Jira Ticket Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10d95703-6ee1-4565-bb82-8b3146f15574",
                "name": "message_type",
                "value": "initial",
                "type": "string"
              },
              {
                "id": "fc44f5f3-f27e-4c90-b037-309efa61ca27",
                "name": "current_user",
                "value": "={{ $('Set Received Info').item.json.current_user }}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1840,
          -280
        ],
        "id": "d803abdc-17e2-4e25-b8e3-0fcd788c814d",
        "name": "Initial Response"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.type }}",
                      "rightValue": "reply_buttons",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Reply Button"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "7412a712-e2b3-4904-acbb-806eac13f444",
                      "leftValue": "={{ $json.type }}",
                      "rightValue": "list",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "List"
              }
            ]
          },
          "options": {
            "fallbackOutput": "extra",
            "ignoreCase": true
          }
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          2720,
          -420
        ],
        "id": "23cd4d79-117c-4737-bba0-879b6082e95e",
        "name": "Switch by Reply Type"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "=https://graph.facebook.com/v22.0/{{ $('Set Received Info').first().json.system_phone_number_id }}/messages",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "whatsAppApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('Set Received Info').first().json.current_user.phone_number || $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"{{ $json.body }}\"\n    },\n    \"action\": {\n      \"buttons\": {{\n        $json.reply_buttons.map(item => ({\n          type: \"reply\",\n          reply: {\n            id: item.id,\n            title: item.title\n          }\n        }))\n        .toJsonString()\n      }}\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          3060,
          -600
        ],
        "id": "bf3cbf36-94dd-4aa4-acc6-844dcddc12e3",
        "name": "WhatsApp Reply Buttons",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "operation": "send",
          "phoneNumberId": "={{ $('Set Received Info').first().json.system_phone_number_id }}",
          "recipientPhoneNumber": "={{ $('Set Received Info').first().json.current_user.phone_number || $('WhatsApp Trigger').item.json.messages[0].from }}",
          "textBody": "={{ $json.body }}",
          "additionalFields": {},
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          3060,
          -240
        ],
        "id": "1f3f5c61-b2eb-4af8-a4c2-3ebe4e4f3233",
        "name": "WhatsApp Reply Text",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "=https://graph.facebook.com/v22.0/{{ $('Set Received Info').first().json.system_phone_number_id }}/messages",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "whatsAppApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('Set Received Info').first().json.current_user.phone_number || $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"list\",\n    \"body\": {\n      \"text\": \"{{ $json.body }}\"\n    },\n    \"action\": {{ $json.action.toJsonString() }}\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          3060,
          -420
        ],
        "id": "7792eda2-b868-4a55-acff-b9fd7d09a7bf",
        "name": "WhatsApp Reply List",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "operation": "upsert",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_session_metadata",
            "mode": "list",
            "cachedResultName": "chat_session_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "active_session_type": "={{ $('Set Received Info').item.json.message_id }}",
              "user_id": "={{ $('Set Received Info').item.json.current_user.id }}",
              "last_interaction_time": "={{ $now.toUTC() }}",
              "data": "{}",
              "phone_number": "={{ $('Set Received Info').first().json.current_user.phone_number }}"
            },
            "matchingColumns": [
              "user_id"
            ],
            "schema": [
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "active_session_type",
                "displayName": "active_session_type",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false
              },
              {
                "id": "last_interaction_time",
                "displayName": "last_interaction_time",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": false,
                "removed": false
              },
              {
                "id": "data",
                "displayName": "data",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "object",
                "canBeUsedToMatch": false,
                "removed": false
              },
              {
                "id": "phone_number",
                "displayName": "phone_number",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1180,
          -660
        ],
        "id": "d4264b51-ebd1-4cd7-a31e-61281cc0f523",
        "name": "Upsert Chat Session Metadata",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_session_metadata",
            "mode": "list",
            "cachedResultName": "chat_session_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "user_id": "={{ $('Set Received Info').first().json.current_user.id }}",
              "last_interaction_time": "={{ $now.toUTC() }}"
            },
            "matchingColumns": [
              "user_id"
            ],
            "schema": [
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "active_session_type",
                "displayName": "active_session_type",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "last_interaction_time",
                "displayName": "last_interaction_time",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true
              },
              {
                "id": "data",
                "displayName": "data",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "object",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1400,
          -920
        ],
        "id": "9f8b3bf5-4881-43ae-8b30-1b1f71ef8d36",
        "name": "Update Chat Session Metadata Last Interaction",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "T8pSUTXESqT74fwb",
            "mode": "list",
            "cachedResultName": "Feedback Workflow"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "user_phone_number": "={{ $json.current_user.phone_number }}",
              "user_id": "={{ $json.current_user.id }}",
              "message_type": "={{ $json.message_type }}",
              "message_id": "={{ $json.message_id }}",
              "message_body": "={{ $json.message_body }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "number",
                "removed": false
              },
              {
                "id": "user_phone_number",
                "displayName": "user_phone_number",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_type",
                "displayName": "message_type",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_id",
                "displayName": "message_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_body",
                "displayName": "message_body",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              }
            ],
            "attemptToConvertTypes": true,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          2460,
          -620
        ],
        "id": "38be125f-4075-462b-8a90-377e5d39e0e6",
        "name": "Execute Feedback Workflow"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "Q8lK9HueYnQciQhK",
            "mode": "list",
            "cachedResultName": "Default Answers"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "message_type": "={{ $json.message_type }}",
              "current_user": "={{ $json.current_user }}",
              "message_id": "={{ $json.message_id }}",
              "phone_number": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
              "message_body": "={{ $json.message_body }}",
              "system_phone_number_id": "={{ $json.system_phone_number_id }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "message_type",
                "displayName": "message_type",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "message_id",
                "displayName": "message_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "message_body",
                "displayName": "message_body",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "phone_number",
                "displayName": "phone_number",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "system_phone_number_id",
                "displayName": "system_phone_number_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string",
                "removed": false
              },
              {
                "id": "current_user",
                "displayName": "current_user",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "object"
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          2460,
          -400
        ],
        "id": "350e8213-1d0c-4974-92ba-434ba85a3108",
        "name": "Execute Default Answers Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10d95703-6ee1-4565-bb82-8b3146f15574",
                "name": "message_type",
                "value": "not_supported",
                "type": "string"
              },
              {
                "id": "fc44f5f3-f27e-4c90-b037-309efa61ca27",
                "name": "current_user",
                "value": "={{ $('Set Received Info').item.json.current_user }}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          2060,
          -440
        ],
        "id": "bc0898ba-1cae-4ef0-aff6-690cfa1a786d",
        "name": "Not Supported Response"
      },
      {
        "parameters": {
          "jsCode": "const [updatedChatMetadata, currentState] = $input.all()\n\nconst result = {\n  ...currentState.json,\n  current_user: {\n    ...currentState.json.current_user,\n    active_session_type: updatedChatMetadata.json.active_session_type\n  }\n}\n\nreturn result;"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1580,
          -560
        ],
        "id": "0191c590-e6d5-4fd4-833b-9917f6e3eb36",
        "name": "Code",
        "executeOnce": false
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          1400,
          -560
        ],
        "id": "e9cc2db5-73be-4e05-9e28-5bcabf75ea1a",
        "name": "Merge1"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "select\n  u.*,\n  c.name as condominium_name,\n  csm.active_session_type\nfrom users u\njoin condominiums c on c.id = u.condominium_id\nleft join chat_session_metadata csm on csm.user_id = u.id\nwhere u.phone_number = $1;",
          "options": {
            "queryReplacement": "='{{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          260,
          20
        ],
        "id": "f52cca81-52f2-4d46-9a5b-c947a812fe84",
        "name": "Get Current User1",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "aa39c63b-ac14-4576-a76a-a259c6085462",
                "name": "system_phone_number_id",
                "value": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
                "type": "string"
              },
              {
                "id": "d706b13d-3304-4c1e-a32d-781b42d44bc0",
                "name": "is_interactive_message",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].type === \"interactive\" }}",
                "type": "boolean"
              },
              {
                "id": "95bf2d22-d46b-4058-a8f0-27c12a46ae2d",
                "name": "message_type",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive?.type ?? $('WhatsApp Trigger').item.json.messages[0].type }}",
                "type": "string"
              },
              {
                "id": "d94bf274-23ca-4879-9d35-ed5ed3f6842f",
                "name": "message_id",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0]?.interactive?.button_reply?.id || $('WhatsApp Trigger').item.json.messages[0].interactive?.list_reply?.id }}",
                "type": "string"
              },
              {
                "id": "1c41783b-75e2-49c1-8739-26f7c2615650",
                "name": "message_body",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0]?.text?.body || $('WhatsApp Trigger').item.json.messages[0].interactive?.list_reply?.title || $('WhatsApp Trigger').item.json.messages[0].image.caption }}",
                "type": "string"
              },
              {
                "id": "3f593fe7-d42e-4336-b5c9-6b8cc2447ad5",
                "name": "image",
                "value": "={{ $('WhatsApp Trigger').item.json.messages[0].image }}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          60,
          -200
        ],
        "id": "4a81578e-e9c1-47ac-bdf0-1d55b5c2f799",
        "name": "Set Received Info1",
        "disabled": true
      },
      {
        "parameters": {
          "amount": "={{ $json.wait_seconds }}"
        },
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          60,
          20
        ],
        "id": "efda4651-ffba-4e54-a427-0f8b8316ab24",
        "name": "Wait",
        "webhookId": "57da40a3-ebfb-4ad3-9c00-8dcdd3372de2",
        "disabled": true
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "INSERT INTO temp_messages (user_id, message, created_at)\nSELECT \n  u.id,\n  $1::jsonb,\n  $2\nFROM users u\nWHERE u.phone_number = $3;",
          "options": {
            "queryReplacement": "='{{ $json.toJsonString() }}', '{{ $now }}', '{{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          280,
          -200
        ],
        "id": "16b00005-c352-4691-af5c-67e9d53e079c",
        "name": "Insert Temp Messages",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "jsCode": "return [\n  {\n    data: $input.all().map(i => i.json),\n  },\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          660,
          20
        ],
        "id": "80da8445-19ef-4ff0-931e-413176bf77bc",
        "name": "Aggregate Messages",
        "executeOnce": true,
        "disabled": true
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "d24f9e8f-5634-4a6c-b9e9-6287169d5fe2",
                "name": "wait_seconds",
                "value": 5,
                "type": "number"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          500,
          -200
        ],
        "id": "31f39c3c-4772-49ac-80d1-59b85cbbb603",
        "name": "Set Wait Seconds",
        "disabled": true
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT tm.message\nFROM temp_messages tm\nWHERE tm.user_id = $1\n  AND tm.created_at >= $2\nORDER BY tm.created_at;",
          "options": {
            "queryReplacement": "={{ $json.id }}, '{{ $now.minus($('Set Wait Seconds').item.json.wait_seconds, \"seconds\").set({ seconds: 0, milliseconds: 0 }) }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          460,
          20
        ],
        "id": "d00ae823-07ee-4671-a600-4214d146ca1a",
        "name": "Get Messages",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        },
        "disabled": true
      }
    ],
    "connections": {
      "WhatsApp Trigger": {
        "main": [
          [
            {
              "node": "If has messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If has messages": {
        "main": [
          [
            {
              "node": "Get Current User",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Current User": {
        "main": [
          [
            {
              "node": "Set Received Info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If Current User exists": {
        "main": [
          [
            {
              "node": "If has Active Session Type",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Information Not Found Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch by Message Type": {
        "main": [
          [
            {
              "node": "Execute Create Jira Ticket Workflow",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute RAG Agent Workflow",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Feedback Workflow",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Not Supported Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute RAG Agent Workflow": {
        "main": [
          [
            {
              "node": "Switch by Reply Type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If has Active Session Type": {
        "main": [
          [
            {
              "node": "Update Chat Session Metadata Last Interaction",
              "type": "main",
              "index": 0
            },
            {
              "node": "Switch by Message Type",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If is Interactive Message",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If is Interactive Message": {
        "main": [
          [
            {
              "node": "Upsert Chat Session Metadata",
              "type": "main",
              "index": 0
            },
            {
              "node": "Merge1",
              "type": "main",
              "index": 1
            }
          ],
          [
            {
              "node": "Initial Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Received Info": {
        "main": [
          [
            {
              "node": "If Current User exists",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Information Not Found Response": {
        "main": [
          [
            {
              "node": "Execute Default Answers Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Create Jira Ticket Workflow": {
        "main": [
          [
            {
              "node": "Switch by Reply Type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Initial Response": {
        "main": [
          [
            {
              "node": "Execute Default Answers Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch by Reply Type": {
        "main": [
          [
            {
              "node": "WhatsApp Reply Buttons",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "WhatsApp Reply List",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "WhatsApp Reply Text",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upsert Chat Session Metadata": {
        "main": [
          [
            {
              "node": "Merge1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Chat Session Metadata Last Interaction": {
        "main": [
          []
        ]
      },
      "Execute Feedback Workflow": {
        "main": [
          [
            {
              "node": "Switch by Reply Type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Default Answers Workflow": {
        "main": [
          [
            {
              "node": "Switch by Reply Type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Not Supported Response": {
        "main": [
          [
            {
              "node": "Execute Default Answers Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code": {
        "main": [
          [
            {
              "node": "Switch by Message Type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge1": {
        "main": [
          [
            {
              "node": "Code",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Current User1": {
        "main": [
          [
            {
              "node": "Get Messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Received Info1": {
        "main": [
          [
            {
              "node": "Insert Temp Messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Insert Temp Messages": {
        "main": [
          [
            {
              "node": "Set Wait Seconds",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait": {
        "main": [
          [
            {
              "node": "Get Current User1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Wait Seconds": {
        "main": [
          [
            {
              "node": "Wait",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Messages": {
        "main": [
          [
            {
              "node": "Aggregate Messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Every 10 minutes": {
        "recurrenceRules": []
      },
      "node:Folder Created": {
        "lastTimeChecked": "2025-02-25T12:48:49Z"
      },
      "node:Folder Updated": {
        "lastTimeChecked": "2025-02-25T12:49:15Z"
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "WhatsApp Trigger": [
        {
          "json": {
            "messaging_product": "whatsapp",
            "metadata": {
              "display_phone_number": "15551438598",
              "phone_number_id": "615396718313030"
            },
            "contacts": [
              {
                "profile": {
                  "name": "Luiz Felipe"
                },
                "wa_id": "5511976217868"
              }
            ],
            "messages": [
              {
                "context": {
                  "from": "15551438598",
                  "id": "wamid.HBgNNTUxMTk3NjIxNzg2OBUCABEYEjM1MTA1OTQ3QzJBQzY0RDBERgA="
                },
                "from": "5511976217868",
                "id": "wamid.HBgNNTUxMTk3NjIxNzg2OBUCABIYFjNFQjBEOUMzMjkwRTUzQjZGQzVDODIA",
                "timestamp": "1745356047",
                "type": "interactive",
                "interactive": {
                  "type": "button_reply",
                  "button_reply": {
                    "id": "ask_for_proposal",
                    "title": "Pedir Proposta"
                  }
                }
              }
            ],
            "field": "messages"
          }
        }
      ]
    },
    "versionId": "07b83ec3-b672-438b-83ec-2391d856318c",
    "triggerCount": 2,
    "tags": []
  },
  {
    "createdAt": "2025-03-05T14:12:10.267Z",
    "updatedAt": "2025-04-23T11:38:54.809Z",
    "id": "B3UwefI9UdmLm3Od",
    "name": "Manage Jira",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "inputSource": "jsonExample",
          "jsonExample": "{\n  \"message_id\": \"example.1\",\n  \"message_type\": \"example\",\n  \"message_body\": \"Some message\",\n  \"current_user\": {\n    \"id\": 1,\n    \"user_type_id\": 1,\n    \"condominium_id\": \"1LOLzPfGPmHxr_NcZjh3X9WOL1mM1Cnuj\",\n    \"nif\": \"123456789\",\n    \"name\": \"Luiz Muniz Moura\",\n    \"phone_number\": \"5511976217868\",\n    \"birthdate\": null,\n    \"jira_id\": \"712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42\"\n  },\n  \"image\": {\n    \"caption\": \"Gostaria de informar também que outros apartamentos estão sem energia também\",\n    \"mime_type\": \"image/jpeg\",\n    \"sha256\": \"BQVS/B06NlbMLby0K+JYajITqTNoweNJMEUNC/P6Ppg=\",\n    \"id\": \"1378327633606603\"\n  }\n}"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -880,
          0
        ],
        "id": "855d960f-ff6c-4de1-a510-579e53a3394f",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "chat_session_metadata",
          "filters": {
            "conditions": [
              {
                "keyName": "user_id",
                "keyValue": "={{ $json.current_user.id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -400,
          0
        ],
        "id": "39fbb9a7-146b-4f2b-bbe9-2ce336b24a2c",
        "name": "Get Chat Session Metadata",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "9e2e0a4c-b30f-4dc1-9fa1-3a376c6fc0f1",
                "name": "data",
                "value": "={{ $json.data }}",
                "type": "object"
              },
              {
                "id": "d725cde9-2fb0-45d0-852c-6974a837dbdd",
                "name": "current_user",
                "value": "={{ $('When Executed by Another Workflow').item.json.current_user }}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -140,
          0
        ],
        "id": "1bccbdf7-8269-4fa6-8b4f-ee7934d3bd05",
        "name": "Set Chat Session Metadata"
      },
      {
        "parameters": {
          "url": "https://dltagg.atlassian.net/rest/api/3/project",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -880,
          400
        ],
        "id": "21a471ad-8967-4e35-b82c-94e33c4d204e",
        "name": "Get Projects",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "45d8e300-ac30-42ac-b0b3-3d39d4dccc7a",
                "name": "body",
                "value": "=Obrigado por informar o ocorrido!\nO ticket {{ $('Create Task').first().json.key }}, referente a ocorrência que você acabou de reportar, foi aberto. Entraremos em contato, em até 72 horas, ao solucionarmos o problema, desde já agradecemos a compreensão.",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1640,
          800
        ],
        "id": "c92a8e30-e3ff-4c98-952a-4b4dc906dd3d",
        "name": "Create Ticket Response",
        "executeOnce": true
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE chat_session_metadata csm\nSET\n  last_interaction_time = $1,\n  data = jsonb_set(\n    data,\n    $2,\n    $3,\n    true\n  )\nWHERE user_id = $4\nRETURNING *;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC() }}', '{{ \"{\" + $json.message_id.split(\".\")[0] + \"}\" }}', '{{ \"\\\"\" + $json.message_id.split(\".\").slice(1).join(\".\") + \"\\\"\"  }}', {{ $json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          -400,
          -200
        ],
        "id": "81dbd896-b855-4866-9d90-975289295307",
        "name": "Update Metadata Data",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "8448526c-5e48-4c68-8591-440e43b74842",
                "leftValue": "={{ $json.message_id.startsWith(\"ticket_\") }}",
                "rightValue": "",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -660,
          0
        ],
        "id": "5c654840-5970-46bb-bd05-0f2b382eca60",
        "name": "If Needs to Update Metadata"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "401d3206-7a1c-46c2-a258-6ac2f7d9a0a3",
                "name": "body",
                "value": "Poderia fornecer uma descrição mais detalhada do problema que está enfrentando?",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          820,
          -80
        ],
        "id": "8b96124f-cb1d-4392-965c-a27b4ed532ab",
        "name": "Get Description Response",
        "executeOnce": true
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "DWQU6MjNQr6yBKxN",
            "mode": "list",
            "cachedResultName": "Jira Ticket Sections"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {},
            "matchingColumns": [],
            "schema": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          600,
          -520
        ],
        "id": "54f8d0b6-65f0-4b5c-bbb7-6e49919da6d4",
        "name": "Execute Jira Ticket Type Workflow"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "m50zdIgN7G1VHM9w",
            "mode": "list",
            "cachedResultName": "Jira Ticket Quantity of Affected People"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {},
            "matchingColumns": [],
            "schema": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          600,
          -300
        ],
        "id": "f3a3cc84-f5e8-46ee-b0e6-b575a2d7145d",
        "name": "Execute Quantity of Affected People Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "614ce7f3-a60f-4420-9527-d82bd763e603",
                "name": "type",
                "value": "list",
                "type": "string"
              },
              {
                "id": "34820154-06e2-4fb0-bf61-8bca81f89cd2",
                "name": "body",
                "value": "={{ $json.body }}",
                "type": "string"
              },
              {
                "id": "98844b9c-d128-47bb-969f-080a4951b724",
                "name": "action",
                "value": "={\n  \"button\": \"{{ $json.button }}\",\n  \"sections\": {{ $json.sections.toJsonString() }}\n}\n",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          820,
          -420
        ],
        "id": "2685dc59-aa05-42bd-926f-ae5119f479ef",
        "name": "List Response",
        "executeOnce": true
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "loose",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "28952db4-2097-4768-9f27-cfb39c0d61b9",
                      "leftValue": "={{ $('Set Chat Session Metadata').item.json.data }}",
                      "rightValue": "",
                      "operator": {
                        "type": "object",
                        "operation": "empty",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Get Ticket Type"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "loose",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $('Set Chat Session Metadata').item.json.data.ticket_sub_step }}",
                      "rightValue": "get_number_of_people_affected",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Get Number of People Affected"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "loose",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "e6438df5-6a6a-4d77-afdc-4bbd087d9b16",
                      "leftValue": "={{ $('Set Chat Session Metadata').item.json.data.ticket_sub_step }}",
                      "rightValue": "get_description",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Get Description"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "loose",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "3f745ec2-a3c7-489c-82b6-c2b0a69bbac0",
                      "leftValue": "={{ $('Set Chat Session Metadata').item.json.data.ticket_sub_step }}",
                      "rightValue": "add_more",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Add More"
              }
            ]
          },
          "looseTypeValidation": true,
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          100,
          -20
        ],
        "id": "3951ba51-e2ed-443a-ba3a-971ec41cd73c",
        "name": "Switch by Step"
      },
      {
        "parameters": {
          "modelId": {
            "__rl": true,
            "value": "gpt-4o-mini",
            "mode": "list",
            "cachedResultName": "GPT-4O-MINI"
          },
          "messages": {
            "values": [
              {
                "content": "=Por favor, crie um título para esse problema \"{{ $('Set Chat Session Metadata').item.json.data.ticket_description }}\", retorne somente o título."
              }
            ]
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "typeVersion": 1.8,
        "position": [
          820,
          560
        ],
        "id": "40e7e3af-652e-4dbe-8ae5-53d271eeedc4",
        "name": "OpenAI",
        "credentials": {
          "openAiApi": {
            "id": "6VoSug2Bcrcb4Pd3",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "f8dd39da-66dc-4998-b792-25a21f7ac04c",
                "name": "priority",
                "value": "={{ $('Set Chat Session Metadata').item.json.data.ticket_qty_affected }}",
                "type": "string"
              },
              {
                "id": "65736394-f57f-46f9-92ea-a10a1c7f5346",
                "name": "account_id",
                "value": "={{ $('Set Chat Session Metadata').item.json.current_user.jira_id }}",
                "type": "string"
              },
              {
                "id": "8dbd82be-5ace-43c1-8f60-5cd54de83176",
                "name": "summary",
                "value": "={{ $json.message.content.replaceAll(/(?<=^)\"|\"(?=$)/gm, \"\").trim() }}",
                "type": "string"
              },
              {
                "id": "7a9c7b9a-7816-4396-8346-fc3642f0beec",
                "name": "description",
                "value": "={{ $('Set Chat Session Metadata').item.json.data.ticket_description }}",
                "type": "string"
              },
              {
                "id": "3c05cefe-baef-4b42-b5f0-62319e9857b7",
                "name": "condominium",
                "value": "={{ $('Get Condominium').item.json.jira_id }}",
                "type": "string"
              },
              {
                "id": "2d5d32f7-98cf-4aee-9ca5-fa3cacd11a06",
                "name": "user_id",
                "value": "={{ $('Set Chat Session Metadata').item.json.current_user.id }}",
                "type": "number"
              },
              {
                "id": "0ff2cc53-79b7-43e0-a622-ed18b02056af",
                "name": "user_phone_number",
                "value": "={{ $('Set Chat Session Metadata').item.json.current_user.phone_number }}",
                "type": "string"
              },
              {
                "id": "99994c3a-4832-4455-aff2-b46a2fb842a7",
                "name": "user_name",
                "value": "={{ $('Set Chat Session Metadata').item.json.current_user.name }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1200,
          560
        ],
        "id": "1508afbf-5144-4721-830b-57367522d02f",
        "name": "Set Ticket Data"
      },
      {
        "parameters": {
          "events": [
            "jira:issue_updated"
          ],
          "additionalFields": {
            "filter": "status IN (\"Done\", \"Closed\", \"Resolved\")"
          }
        },
        "type": "n8n-nodes-base.jiraTrigger",
        "typeVersion": 1.1,
        "position": [
          -880,
          -600
        ],
        "id": "eabd8860-6e4e-42a2-9e80-5014b2244faf",
        "name": "Jira Ticket Moved to Done Trigger",
        "webhookId": "50861c44-9510-4166-815c-994db1d7106c",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "operation": "send",
          "phoneNumberId": "615396718313030",
          "recipientPhoneNumber": "={{ $json.phone_number }}",
          "textBody": "={{ $json.body }}",
          "additionalFields": {},
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          100,
          -600
        ],
        "id": "9e9badc9-a7e4-4a99-a97d-6396d96fadd4",
        "name": "WhatsApp Business Cloud",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "users",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "keyValue": "={{ $json.issue.fields.customfield_10191 }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -400,
          -600
        ],
        "id": "70e3a20d-2808-4651-90f9-69d5923cfdef",
        "name": "Supabase",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "d617a7ae-6386-41b8-9c73-83df47e76a6e",
                "leftValue": "={{ $('When Executed by Another Workflow').item.json.message_type }}",
                "rightValue": "button_reply",
                "operator": {
                  "type": "string",
                  "operation": "notEquals"
                }
              },
              {
                "id": "70ddb83d-9eb9-4027-8141-3a47590c5906",
                "leftValue": "={{ $('When Executed by Another Workflow').item.json.message_id }}",
                "rightValue": "no",
                "operator": {
                  "type": "string",
                  "operation": "notEquals"
                }
              }
            ],
            "combinator": "or"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          380,
          260
        ],
        "id": "150ca60f-b7b9-4888-8be9-a9d94e00fe73",
        "name": "If More Context Provided"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE chat_session_metadata\nSET\n  last_interaction_time = $1,\n  data = jsonb_set(\n    data,\n    '{ticket_description}',\n    $2,\n    true\n  )\nWHERE user_id = $3\nRETURNING *;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC() }}', '{{ \"\\\"\" + (($('Set Chat Session Metadata').item.json.data.ticket_description || \"\") + \" \" + $('When Executed by Another Workflow').item.json.message_body).trim() + \"\\\"\" }}', {{ $('Set Chat Session Metadata').item.json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          980,
          360
        ],
        "id": "02843d31-d68c-4cdb-a81a-3fb459c97a97",
        "name": "Append Description",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10d95703-6ee1-4565-bb82-8b3146f15574",
                "name": "body",
                "value": "Deseja adicionar fotos, mais detalhes, ou algo a mais a sua notificação de ocorrência?",
                "type": "string"
              },
              {
                "id": "fc44f5f3-f27e-4c90-b037-309efa61ca27",
                "name": "type",
                "value": "reply_buttons",
                "type": "string"
              },
              {
                "id": "a83a4bb1-2fc5-4e6e-b6d3-184547299241",
                "name": "reply_buttons",
                "value": "[\n  {\n    \"id\": \"no\",\n    \"title\": \"Não\"\n  }\n]",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1200,
          360
        ],
        "id": "0ed8424b-5135-42cd-aeb1-6f4f89ab1f07",
        "name": "Add More Response",
        "executeOnce": true
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE chat_session_metadata\nSET\n  last_interaction_time = $1,\n  data = jsonb_set(\n    data,\n    '{ticket_sub_step}',\n    '\"get_number_of_people_affected\"',\n    true\n  )\nWHERE user_id = $2\nRETURNING *;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC() }}', {{ $('Set Chat Session Metadata').item.json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          380,
          -520
        ],
        "id": "68fde50a-d003-481a-8917-9bbeb0f8e4e5",
        "name": "Set Next Sub Step to Get Number of People Affected",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE chat_session_metadata\nSET\n  last_interaction_time = $1,\n  data = jsonb_set(\n    data,\n    '{ticket_sub_step}',\n    '\"get_description\"',\n    true\n  )\nWHERE user_id = $2\nRETURNING *;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC() }}', {{ $('Set Chat Session Metadata').item.json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          380,
          -300
        ],
        "id": "36c19e25-64a2-4f8f-b328-55766b65eb7f",
        "name": "Set Next Sub Step to Get Description",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE chat_session_metadata\nSET\n  last_interaction_time = $1,\n  data = jsonb_set(\n    data,\n    '{ticket_sub_step}',\n    '\"add_more\"',\n    true\n  )\nWHERE user_id = $2\nRETURNING *;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC() }}', {{ $('Set Chat Session Metadata').item.json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          600,
          -80
        ],
        "id": "5f798307-4e6a-4d56-a435-e42fee0a31ba",
        "name": "Set Next Sub Step to Add more",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "delete",
          "tableId": "chat_session_metadata",
          "filters": {
            "conditions": [
              {
                "keyName": "user_id",
                "condition": "eq",
                "keyValue": "={{ $('Set Chat Session Metadata').item.json.current_user.id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1200,
          800
        ],
        "id": "3d9dbfc3-e4cf-4f45-992b-ecca3a4beec2",
        "name": "Delete Chat Session Metadata",
        "executeOnce": true,
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "condominiums",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "keyValue": "={{ $('Set Chat Session Metadata').item.json.current_user.condominium_id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          600,
          560
        ],
        "id": "c0357b47-3799-4a72-9037-9c47634b07bb",
        "name": "Get Condominium",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "url": "https://dltagg.atlassian.net/rest/api/3/field/customfield_10124/context/10225/option",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -880,
          580
        ],
        "id": "e9948413-1772-4cfe-8df5-ba47f480b1d9",
        "name": "Get Custom Field Options (context)",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://dltagg.atlassian.net/rest/api/3/field/customfield_10124/context/10225/option",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "{\n  \"options\": [\n    {\n      \"disabled\": false,\n      \"value\": \"Condo A\"\n    },\n    {\n      \"disabled\": false,\n      \"value\": \"Condo B\"\n    }\n  ]\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -880,
          780
        ],
        "id": "15f519b0-269b-4d9d-8c7f-a535b58a7e22",
        "name": "Create Custom Field Options (context)",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://dltagg.atlassian.net/rest/api/3/issue",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"fields\": {\n    \"project\": {\n      \"id\": {{ $('Set Jira Data').item.json.project_id }}\n    },\n    \"issuetype\": {\n      \"id\": \"{{ $('Set Jira Data').item.json.issue_type_id }}\"\n    },\n    \"priority\": {\n      \"id\": \"{{ $json.priority }}\"\n    },\n    \"summary\": \"{{ $json.summary }}\",\n    \"description\": {\n      \"type\": \"doc\",\n      \"version\": 1,\n      \"content\": [\n        {\n          \"type\": \"paragraph\",\n          \"content\": [\n            {\n              \"text\": \"{{ $json.description }}\",\n              \"type\": \"text\"\n            }\n          ]\n        }\n      ]\n    },\n    \"customfield_10124\": {\n      \"id\": \"{{ $json.condominium }}\"\n    },\n    \"customfield_10192\": \"{{ $json.user_name }}\",\n    \"customfield_10191\": \"{{ $json.user_id }}\",\n    \"customfield_10190\": \"{{ $json.user_phone_number }}\"\n  }\n}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1420,
          560
        ],
        "id": "fe83fe73-94f2-4c0c-b041-482b2a27b41b",
        "name": "Create Task",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "resource": "media",
          "operation": "mediaUrlGet",
          "mediaGetId": "={{ $('When Executed by Another Workflow').item.json.image.id }}",
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          980,
          120
        ],
        "id": "909aad6d-a4ed-4998-9ab4-b13a2a805577",
        "name": "Get Image",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "url": "={{ $json.url }}",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "whatsAppApi",
          "options": {
            "response": {
              "response": {
                "responseFormat": "file"
              }
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1200,
          120
        ],
        "id": "0cbbf697-92ec-49f6-a2a5-54ce13eef2ce",
        "name": "Download Image",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          980,
          800
        ],
        "id": "d3626bd4-1f89-4a4a-a0d6-912ca6722399",
        "name": "Loop Over Images"
      },
      {
        "parameters": {
          "operation": "delete",
          "tableId": "chat_session_medias",
          "filters": {
            "conditions": [
              {
                "keyName": "user_id",
                "condition": "eq",
                "keyValue": "={{ $('Set Chat Session Metadata').item.json.current_user.id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1420,
          800
        ],
        "id": "84f92f6b-1b33-4ac3-be6c-abab9252a40a",
        "name": "Delete Chat Session Medias",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "INSERT INTO chat_session_medias (user_id, filename, mime_type, \"binary\")\nVALUES (\n  $1,\n  $2,\n  $3,\n  decode($4, 'base64')\n);",
          "options": {
            "queryReplacement": "={{ $('Set Chat Session Metadata').item.json.current_user.id }}, {{ $now.toUnixInteger() + '.' + $binary.data.fileExtension }}, {{ $binary.data.mimeType }}, {{ $json.data }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1640,
          120
        ],
        "id": "4f0e2bc1-5d58-43e4-a675-db99748fa37a",
        "name": "Insert Chat Session Images",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "949f6aa5-9cac-461e-9a7a-96597b792344",
                "leftValue": "={{ $('When Executed by Another Workflow').item.json.message_type }}",
                "rightValue": "image",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          660,
          260
        ],
        "id": "5ff36f62-8fae-4195-811a-dc14efebaf1f",
        "name": "If is Media Type"
      },
      {
        "parameters": {
          "operation": "binaryToPropery",
          "options": {
            "keepSource": "binary"
          }
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1420,
          120
        ],
        "id": "bf96d966-cd0b-4c43-8017-6b2e9acb4fd3",
        "name": "To Base64"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT\n  csm.id,\n  csm.user_id,\n  csm.filename,\n  csm.mime_type,\n  encode(csm.binary, 'base64') as data\nFROM chat_session_medias csm\nWHERE csm.user_id = $1",
          "options": {
            "queryReplacement": "={{ $('Set Chat Session Metadata').item.json.current_user.id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1640,
          560
        ],
        "id": "87230a51-e62d-40b7-816a-0f73ed185e79",
        "name": "Get Session Medias",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "toBinary",
          "sourceProperty": "data",
          "options": {
            "fileName": "={{ $json.filename }}",
            "mimeType": "={{ $json.mime_type }}"
          }
        },
        "type": "n8n-nodes-base.convertToFile",
        "typeVersion": 1.1,
        "position": [
          1200,
          1000
        ],
        "id": "7be8f65d-9514-4952-9963-8f73536a75e2",
        "name": "To Binary"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "d0f07a6b-449f-4094-8740-55b5fddc193f",
                "name": "project_id",
                "value": "10002",
                "type": "string"
              },
              {
                "id": "70f9d8a8-0345-4963-afa8-c0006a65cbce",
                "name": "project_key",
                "value": "NA",
                "type": "string"
              },
              {
                "id": "f096caf8-0d35-4578-a157-980749896507",
                "name": "issue_type_id",
                "value": "10011",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          380,
          560
        ],
        "id": "146391b5-d867-4428-a282-45dcd387a556",
        "name": "Set Jira Data"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "fb15139b-f1b3-46c4-a84e-12cab812f37d",
                "name": "body",
                "value": "=A ocorrência {{ $('Jira Ticket Moved to Done Trigger').item.json.issue.key }} referente a \"{{ $('Jira Ticket Moved to Done Trigger').item.json.issue.fields.summary }}\", que você notificou no dia {{ DateTime.fromISO($('Jira Ticket Moved to Done Trigger').item.json.issue.fields.attachment[0].created).format('dd/MM/yyyy') }}, foi resolvida!",
                "type": "string"
              },
              {
                "id": "13a1f3e2-305e-4982-8374-3f0bc38c37e2",
                "name": "phone_number",
                "value": "={{ $json.phone_number }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -160,
          -600
        ],
        "id": "b0495ccb-75a6-41c9-80be-d566150022d4",
        "name": "Ticket Moved to Done Response"
      },
      {
        "parameters": {
          "resource": "issueAttachment",
          "issueKey": "={{ $('Create Task').first().json.key }}"
        },
        "type": "n8n-nodes-base.jira",
        "typeVersion": 1,
        "position": [
          1420,
          1000
        ],
        "id": "2995d36f-3db4-48db-ae1e-d2ded413c9bc",
        "name": "Jira Attach Media to Task",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "2db0ee59-04ad-4348-8bd3-1a1ba2180201",
                "leftValue": "={{ $json.issue_event_type_name }}",
                "rightValue": "issue_updated",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -660,
          -600
        ],
        "id": "9aac04ec-8be9-48c9-8aea-d9c38cdc9823",
        "name": "If issue_event_type is issue_updated"
      }
    ],
    "connections": {
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "If Needs to Update Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Chat Session Metadata": {
        "main": [
          [
            {
              "node": "Set Chat Session Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Chat Session Metadata": {
        "main": [
          [
            {
              "node": "Switch by Step",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Metadata Data": {
        "main": [
          [
            {
              "node": "Set Chat Session Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If Needs to Update Metadata": {
        "main": [
          [
            {
              "node": "Update Metadata Data",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Get Chat Session Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Jira Ticket Type Workflow": {
        "main": [
          [
            {
              "node": "List Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Quantity of Affected People Workflow": {
        "main": [
          [
            {
              "node": "List Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch by Step": {
        "main": [
          [
            {
              "node": "Set Next Sub Step to Get Number of People Affected",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set Next Sub Step to Get Description",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set Next Sub Step to Add more",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If More Context Provided",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI": {
        "main": [
          [
            {
              "node": "Set Ticket Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Ticket Data": {
        "main": [
          [
            {
              "node": "Create Task",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Jira Ticket Moved to Done Trigger": {
        "main": [
          [
            {
              "node": "If issue_event_type is issue_updated",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Supabase": {
        "main": [
          [
            {
              "node": "Ticket Moved to Done Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If More Context Provided": {
        "main": [
          [
            {
              "node": "If is Media Type",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set Jira Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Append Description": {
        "main": [
          [
            {
              "node": "Add More Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Next Sub Step to Get Number of People Affected": {
        "main": [
          [
            {
              "node": "Execute Jira Ticket Type Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Next Sub Step to Get Description": {
        "main": [
          [
            {
              "node": "Execute Quantity of Affected People Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Next Sub Step to Add more": {
        "main": [
          [
            {
              "node": "Get Description Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Chat Session Metadata": {
        "main": [
          [
            {
              "node": "Delete Chat Session Medias",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Condominium": {
        "main": [
          [
            {
              "node": "OpenAI",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create Task": {
        "main": [
          [
            {
              "node": "Get Session Medias",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Image": {
        "main": [
          [
            {
              "node": "Download Image",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download Image": {
        "main": [
          [
            {
              "node": "To Base64",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Images": {
        "main": [
          [
            {
              "node": "Delete Chat Session Metadata",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "To Binary",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Chat Session Medias": {
        "main": [
          [
            {
              "node": "Create Ticket Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Insert Chat Session Images": {
        "main": [
          [
            {
              "node": "Append Description",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If is Media Type": {
        "main": [
          [
            {
              "node": "Get Image",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Append Description",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "To Base64": {
        "main": [
          [
            {
              "node": "Insert Chat Session Images",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Session Medias": {
        "main": [
          [
            {
              "node": "Loop Over Images",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "To Binary": {
        "main": [
          [
            {
              "node": "Jira Attach Media to Task",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Jira Data": {
        "main": [
          [
            {
              "node": "Get Condominium",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Ticket Moved to Done Response": {
        "main": [
          [
            {
              "node": "WhatsApp Business Cloud",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Jira Attach Media to Task": {
        "main": [
          [
            {
              "node": "Loop Over Images",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If issue_event_type is issue_updated": {
        "main": [
          [
            {
              "node": "Supabase",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Jira Ticket Moved to Done Trigger": {
        "webhookId": "431"
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "Jira Ticket Moved to Done Trigger": [
        {
          "json": {
            "timestamp": 1743686551538,
            "webhookEvent": "jira:issue_updated",
            "issue_event_type_name": "issue_updated",
            "user": {
              "self": "https://dltagg.atlassian.net/rest/api/2/user?accountId=712020%3A2dc14321-e4a9-4035-a1a5-ea5a187ece42",
              "accountId": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42",
              "avatarUrls": {
                "48x48": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                "24x24": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                "16x16": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                "32x32": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png"
              },
              "displayName": "Luiz Felipe Muniz Moura",
              "active": true,
              "timeZone": "America/Sao_Paulo",
              "accountType": "atlassian"
            },
            "issue": {
              "id": "10363",
              "self": "https://dltagg.atlassian.net/rest/api/2/10363",
              "key": "NA-30",
              "fields": {
                "statuscategorychangedate": "2025-04-03T10:22:31.047-0300",
                "issuetype": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/issuetype/10011",
                  "id": "10011",
                  "description": "A task that needs to be done.",
                  "iconUrl": "https://dltagg.atlassian.net/rest/api/2/universal_avatar/view/type/issuetype/avatar/10678?size=medium",
                  "name": "Task",
                  "subtask": false,
                  "avatarId": 10678,
                  "hierarchyLevel": 0
                },
                "customfield_10190": "5511976217868",
                "customfield_10191": "1",
                "customfield_10192": "Luiz Muniz Moura",
                "timespent": null,
                "customfield_10030": null,
                "project": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/project/10002",
                  "id": "10002",
                  "key": "NA",
                  "name": "n8n Agent",
                  "projectTypeKey": "software",
                  "simplified": false,
                  "avatarUrls": {
                    "48x48": "https://dltagg.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10419",
                    "24x24": "https://dltagg.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10419?size=small",
                    "16x16": "https://dltagg.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10419?size=xsmall",
                    "32x32": "https://dltagg.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10419?size=medium"
                  }
                },
                "customfield_10031": null,
                "customfield_10032": null,
                "fixVersions": [],
                "statusCategory": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/statuscategory/3",
                  "id": 3,
                  "key": "done",
                  "colorName": "green",
                  "name": "Complete"
                },
                "customfield_10034": null,
                "aggregatetimespent": null,
                "resolution": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/resolution/10000",
                  "id": "10000",
                  "description": "Work has been completed on this issue.",
                  "name": "Done"
                },
                "customfield_10035": null,
                "customfield_10037": null,
                "customfield_10027": null,
                "customfield_10028": null,
                "customfield_10029": null,
                "resolutiondate": "2025-04-03T10:22:31.014-0300",
                "workratio": -1,
                "watches": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/issue/NA-30/watchers",
                  "watchCount": 1,
                  "isWatching": true
                },
                "lastViewed": "2025-04-03T10:22:07.380-0300",
                "created": "2025-04-03T10:21:39.480-0300",
                "customfield_10020": null,
                "customfield_10021": null,
                "customfield_10022": null,
                "priority": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/priority/3",
                  "iconUrl": "https://dltagg.atlassian.net/images/icons/priorities/medium_new.svg",
                  "name": "Medium",
                  "id": "3"
                },
                "customfield_10023": null,
                "customfield_10024": null,
                "customfield_10025": null,
                "labels": [],
                "customfield_10026": "10007_*:*_1_*:*_51566_*|*_10009_*:*_1_*:*_0",
                "customfield_10016": null,
                "customfield_10017": null,
                "customfield_10018": {
                  "hasEpicLinkFieldDependency": false,
                  "showField": false,
                  "nonEditableReason": {
                    "reason": "EPIC_LINK_SHOULD_BE_USED",
                    "message": "Para definir um epic como pai, use o link de epic"
                  }
                },
                "customfield_10019": "0|i00047:0009",
                "timeestimate": null,
                "aggregatetimeoriginalestimate": null,
                "versions": [],
                "issuelinks": [],
                "assignee": null,
                "updated": "2025-04-03T10:22:31.538-0300",
                "status": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/status/10009",
                  "description": "",
                  "iconUrl": "https://dltagg.atlassian.net/",
                  "name": "Done",
                  "id": "10009",
                  "statusCategory": {
                    "self": "https://dltagg.atlassian.net/rest/api/2/statuscategory/3",
                    "id": 3,
                    "key": "done",
                    "colorName": "green",
                    "name": "Complete"
                  }
                },
                "components": [],
                "timeoriginalestimate": null,
                "description": "As luzes do corredor do piso 3 não acendem, não aparentam estar queimadas mas sim ser um problema geral Um exemplo das luzes que não estão funcionando",
                "customfield_10010": null,
                "customfield_10014": null,
                "customfield_10058": null,
                "timetracking": {},
                "customfield_10015": null,
                "customfield_10005": null,
                "customfield_10049": null,
                "customfield_10006": null,
                "security": null,
                "customfield_10007": null,
                "customfield_10008": null,
                "customfield_10009": null,
                "attachment": [
                  {
                    "self": "https://dltagg.atlassian.net/rest/api/2/attachment/10066",
                    "id": "10066",
                    "filename": "File.jpg",
                    "author": {
                      "self": "https://dltagg.atlassian.net/rest/api/2/user?accountId=712020%3A2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                      "accountId": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                      "avatarUrls": {
                        "48x48": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                        "24x24": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                        "16x16": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                        "32x32": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png"
                      },
                      "displayName": "Luiz Felipe Muniz Moura",
                      "active": true,
                      "timeZone": "America/Sao_Paulo",
                      "accountType": "atlassian"
                    },
                    "created": "2025-04-03T10:21:41.587-0300",
                    "size": 84857,
                    "mimeType": "image/jpeg",
                    "content": "https://dltagg.atlassian.net/rest/api/2/attachment/content/10066",
                    "thumbnail": "https://dltagg.atlassian.net/rest/api/2/attachment/thumbnail/10066"
                  }
                ],
                "aggregatetimeestimate": null,
                "summary": "Problema Geral nas Luzes do Corredor do Piso 3",
                "creator": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/user?accountId=712020%3A2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                  "accountId": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                  "avatarUrls": {
                    "48x48": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "24x24": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "16x16": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "32x32": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png"
                  },
                  "displayName": "Luiz Felipe Muniz Moura",
                  "active": true,
                  "timeZone": "America/Sao_Paulo",
                  "accountType": "atlassian"
                },
                "subtasks": [],
                "customfield_10040": null,
                "customfield_10041": null,
                "customfield_10042": [],
                "reporter": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/user?accountId=712020%3A2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                  "accountId": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42",
                  "avatarUrls": {
                    "48x48": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "24x24": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "16x16": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png",
                    "32x32": "https://secure.gravatar.com/avatar/c08ef181a2584e0b9bad127db8d8c4a3?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FLM-4.png"
                  },
                  "displayName": "Luiz Felipe Muniz Moura",
                  "active": true,
                  "timeZone": "America/Sao_Paulo",
                  "accountType": "atlassian"
                },
                "customfield_10043": null,
                "customfield_10044": null,
                "aggregateprogress": {
                  "progress": 0,
                  "total": 0
                },
                "customfield_10001": null,
                "customfield_10045": null,
                "customfield_10046": null,
                "customfield_10002": [],
                "customfield_10047": null,
                "customfield_10124": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/customFieldOption/10089",
                  "value": "Condo B",
                  "id": "10089"
                },
                "customfield_10003": null,
                "customfield_10004": null,
                "customfield_10048": null,
                "environment": null,
                "duedate": null,
                "progress": {
                  "progress": 0,
                  "total": 0
                },
                "votes": {
                  "self": "https://dltagg.atlassian.net/rest/api/2/issue/NA-30/votes",
                  "votes": 0,
                  "hasVoted": false
                }
              }
            },
            "changelog": {
              "id": "10465",
              "items": [
                {
                  "field": "Rank",
                  "fieldtype": "custom",
                  "fieldId": "customfield_10019",
                  "from": "",
                  "fromString": "",
                  "to": "",
                  "toString": "Ranked higher"
                }
              ]
            },
            "triggeredByUser": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42"
          }
        }
      ],
      "When Executed by Another Workflow": [
        {
          "json": {
            "message_type": "image",
            "message_body": "Um exemplo das luzes que não estão funcionando",
            "current_user": {
              "id": "1",
              "user_type_id": "1",
              "condominium_id": "1LOLzPfGPmHxr_NcZjh3X9WOL1mM1Cnuj",
              "nif": "123456789",
              "name": "Luiz Muniz Moura",
              "phone_number": "5511976217868",
              "birthdate": null,
              "jira_id": "712020:2dc14321-e4a9-4035-a1a5-ea5a187ece42",
              "condominium_name": "Condo A",
              "active_session_type": "create_ticket"
            },
            "image": {
              "caption": "Um exemplo das luzes que não estão funcionando",
              "mime_type": "image/jpeg",
              "sha256": "BQVS/B06NlbMLby0K+JYajITqTNoweNJMEUNC/P6Ppg=",
              "id": "3016164691878784"
            }
          }
        }
      ]
    },
    "versionId": "391d9616-10a3-4442-9140-8e42452dc568",
    "triggerCount": 1,
    "tags": []
  },
  {
    "createdAt": "2025-02-26T14:46:14.131Z",
    "updatedAt": "2025-04-15T00:41:07.269Z",
    "id": "XXmG7fsFAe68u0lM",
    "name": "Folder Watch",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "44mBTPOhCDeUkjmK",
            "mode": "list",
            "cachedResultName": "Ingest Files"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {},
            "matchingColumns": [],
            "schema": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          600,
          -480
        ],
        "id": "093e8809-12d7-40f9-bbb1-215dd111c8bf",
        "name": "Ingest Files"
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "105nc63fgWYq1ZLnNUS47CH7ngerwSsT5",
            "mode": "id"
          },
          "event": "fileCreated",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          600,
          -280
        ],
        "id": "86ce0226-6bf8-47ae-a703-2b04691d2acf",
        "name": "On File Created (Condo C)",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "105nc63fgWYq1ZLnNUS47CH7ngerwSsT5",
            "mode": "id"
          },
          "event": "fileUpdated",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          600,
          -130
        ],
        "id": "235bdd34-b64e-46e9-b7fc-069891bdfe09",
        "name": "On File Updated (Condo C)",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "1xUTzzX6Xt0fwA91sl7SEDRGBAq8QTxY5",
            "mode": "id"
          },
          "event": "fileCreated",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          600,
          70
        ],
        "id": "664696a4-af86-407c-b53c-57edab7aff8d",
        "name": "On File Created (Condo Teste)",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "triggerOn": "specificFolder",
          "folderToWatch": {
            "__rl": true,
            "value": "1xUTzzX6Xt0fwA91sl7SEDRGBAq8QTxY5",
            "mode": "id"
          },
          "event": "fileUpdated",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDriveTrigger",
        "typeVersion": 1,
        "position": [
          600,
          220
        ],
        "id": "ff75557f-e203-4eee-9256-da5cd5e4478e",
        "name": "On File Updated (Condo Teste)",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      }
    ],
    "connections": {
      "On File Created (Condo C)": {
        "main": [
          [
            {
              "node": "Ingest Files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "On File Updated (Condo C)": {
        "main": [
          [
            {
              "node": "Ingest Files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "On File Created (Condo Teste)": {
        "main": [
          [
            {
              "node": "Ingest Files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "On File Updated (Condo Teste)": {
        "main": [
          [
            {
              "node": "Ingest Files",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true,
      "saveDataErrorExecution": "all",
      "saveDataSuccessExecution": "all",
      "executionTimeout": 3600,
      "errorWorkflow": "VzqKEW0ShTXA5vPj",
      "timezone": "America/New_York",
      "executionOrder": "v1"
    },
    "staticData": {
      "node:On File Created (Porto São Paulo 1)": {
        "lastTimeChecked": "2025-02-27T11:34:12Z"
      },
      "node:On File Updated (Porto São Paulo 1)": {
        "lastTimeChecked": "2025-02-27T11:34:59Z"
      },
      "node:On File Created (Condo 1)": {
        "lastTimeChecked": "2025-03-07T18:45:05Z"
      },
      "node:On File Updated (Condo 1)": {
        "lastTimeChecked": "2025-03-07T18:45:40Z"
      },
      "node:On File Created (Condo 2)": {
        "lastTimeChecked": "2025-03-07T13:56:14Z"
      },
      "node:On File Updated (Condo 2)": {
        "lastTimeChecked": "2025-03-07T13:56:15Z"
      },
      "node:On File Created (Condo 12)": {
        "lastTimeChecked": "2025-03-12T15:58:05Z"
      },
      "node:On File Updated (Condo 12)": {
        "lastTimeChecked": "2025-03-12T15:58:05Z"
      },
      "node:On File Created (Condomínio A)": {
        "lastTimeChecked": "2025-03-12T15:58:06Z"
      },
      "node:On File Updated (Condomínio A)": {
        "lastTimeChecked": "2025-03-12T15:58:06Z"
      },
      "node:On File Created (Condo A)": {
        "lastTimeChecked": "2025-04-02T12:06:41Z"
      },
      "node:On File Updated (Condo A)": {
        "lastTimeChecked": "2025-04-02T12:06:41Z"
      },
      "node:On File Created (Condo C)": {
        "lastTimeChecked": "2025-04-24T10:55:09Z"
      },
      "node:On File Updated (Condo C)": {
        "lastTimeChecked": "2025-04-24T10:55:10Z"
      },
      "node:On File Created (Condo Teste)": {
        "lastTimeChecked": "2025-04-24T10:55:10Z"
      },
      "node:On File Updated (Condo Teste)": {
        "lastTimeChecked": "2025-04-24T10:55:11Z"
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "0926f614-af93-436a-b9d3-215f054ce48e",
    "triggerCount": 4,
    "tags": []
  },
  {
    "createdAt": "2025-03-18T11:34:00.673Z",
    "updatedAt": "2025-04-23T11:35:48.569Z",
    "id": "Q8lK9HueYnQciQhK",
    "name": "Default Answers",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "25eb4c1d-8281-4a2f-ae5e-1a6f7e74214d",
                "name": "body",
                "value": "Infelizmente não consigo processar mensagens que não sejam de texto.\nPor favor, envie somente mensagens de texto. Obrigado!",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          -60
        ],
        "id": "d06697fb-2bbc-4fc2-aa4a-ac54083d7327",
        "name": "Not Supported Response"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "40d88cf7-c208-4d6b-b2a2-e5c19262103d",
                "name": "body",
                "value": "Olá, seja bem vindo ao WhatsApp para assistência da Mistercondo.\\nDeseja conhecer mais da Mistercondo? Acesse o nosso site agora mesmo e confira nossas soluções para o seu condomínio.\\n\\nCaso tenha mudado de número ou seja novo, por favor, entre em contato com o administrador do seu condomínio e solicite seu cadastro ou alteração de número.",
                "type": "string"
              },
              {
                "id": "2a61155c-6118-4d16-98d4-b39c76ae3e63",
                "name": "type",
                "value": "reply_buttons",
                "type": "string"
              },
              {
                "id": "196a1090-4ffa-4aca-ace3-945f22e4697f",
                "name": "reply_buttons",
                "value": "[\n  {\n    \"id\": \"ask_for_proposal\",\n    \"title\": \"Pedir Proposta\"\n  },\n  {\n    \"id\": \"talk_to_sales\",\n    \"title\": \"Falar com Comercial\"\n  }\n]",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          320
        ],
        "id": "56aaacff-10d4-4616-92dd-4558c44633d5",
        "name": "Information Not Found Response"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "10d95703-6ee1-4565-bb82-8b3146f15574",
                "name": "body",
                "value": "=Olá {{ $json.current_user.name }}, como posso te ajudar?",
                "type": "string"
              },
              {
                "id": "fc44f5f3-f27e-4c90-b037-309efa61ca27",
                "name": "type",
                "value": "reply_buttons",
                "type": "string"
              },
              {
                "id": "a83a4bb1-2fc5-4e6e-b6d3-184547299241",
                "name": "reply_buttons",
                "value": "[\n  {\n    \"id\": \"ask_questions\",\n    \"title\": \"Tirar dúvidas\"\n  },\n  {\n    \"id\": \"create_ticket\",\n    \"title\": \"Pedir assistência\"\n  }\n]",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          -240
        ],
        "id": "e1a6b663-eb53-4b7d-8712-385871844604",
        "name": "Initial Response"
      },
      {
        "parameters": {
          "inputSource": "jsonExample",
          "jsonExample": "{\n  \"message_type\": \"initial\",\n  \"message_id\": \"ask_for_proposal\",\n  \"message_body\": \"\",\n  \"phone_number\": \"123456789\",\n  \"system_phone_number_id\": \"123456789\",\n  \"current_user\": {\n    \"id\": 123,\n    \"name\": \"Luiz\"\n  }\n}"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -860,
          240
        ],
        "id": "4d24692d-b3ee-464c-9f00-05ff5dd11f84",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "40d88cf7-c208-4d6b-b2a2-e5c19262103d",
                "name": "body",
                "value": "Olá, seja bem vindo ao WhatsApp para assistência da Mistercondo.\nDeseja conhecer mais da Mistercondo? Acesse o nosso site agora mesmo e confira nossas soluções para o seu condomínio.\n\nCaso tenha mudado de número ou seja novo, por favor, entre em contato com o administrador do seu condomínio e solicite seu cadastro ou alteração de número.",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          420,
          320
        ],
        "id": "13841124-6f84-458f-ae00-41d2bbb26360",
        "name": "Information Not Found Response1",
        "disabled": true
      },
      {
        "parameters": {
          "operation": "upsert",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_session_metadata",
            "mode": "list",
            "cachedResultName": "chat_session_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "phone_number": "={{ $('When Executed by Another Workflow').item.json.phone_number }}",
              "active_session_type": "={{ $json.message_id }}",
              "last_interaction_time": "={{ $now.toUTC() }}",
              "data": "{}"
            },
            "matchingColumns": [
              "phone_number"
            ],
            "schema": [
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "active_session_type",
                "displayName": "active_session_type",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false
              },
              {
                "id": "last_interaction_time",
                "displayName": "last_interaction_time",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": false
              },
              {
                "id": "data",
                "displayName": "data",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "object",
                "canBeUsedToMatch": false,
                "removed": false
              },
              {
                "id": "phone_number",
                "displayName": "phone_number",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          -40,
          700
        ],
        "id": "143f4636-81dc-4328-a2c1-4001faca6990",
        "name": "Upsert chat_session_metadata",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.message_type }}",
                      "rightValue": "initial",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Initial"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "358153d8-77d5-4919-8d7f-44a32d1b5aac",
                      "leftValue": "={{ $json.message_type }}",
                      "rightValue": "not_supported",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Not Supported"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "d47ab0c1-dddc-4362-a112-23cf0c9d20f6",
                      "leftValue": "={{ $json.message_type }}",
                      "rightValue": "information_not_found.text",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Information Not Found - Text"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "887792b7-41aa-45da-82df-5734788dbe23",
                      "leftValue": "={{ $json.message_type }}",
                      "rightValue": "=information_not_found.button_reply",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Information Not Found - Option Selected"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          -580,
          220
        ],
        "id": "a77d7363-3ffe-4df8-9998-469b383bb55d",
        "name": "Switch by message_type"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "1ae68205-1d46-4b90-a22e-385102d47d09",
                      "leftValue": "={{ $json.message_id }}",
                      "rightValue": "talk_to_sales",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Talk to sales"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.message_id }}",
                      "rightValue": "ask_for_proposal",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Ask for proposal"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          -280,
          580
        ],
        "id": "bd4d90d5-029a-4274-bb29-6533e9b04ccb",
        "name": "Switch by message_id"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "a8608fb8-9159-4aad-842c-44c2312fc5ef",
                "name": "body",
                "value": "Repassei o seu contato para o time comercial. Eles entraram em contato assim que possível.",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          420,
          520
        ],
        "id": "d1d0bbc7-4077-45c8-be7b-b27a7dd5cf71",
        "name": "Talk to sales Response"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "dee47078-4c63-457b-8785-4aed361d9e26",
                "name": "body",
                "value": "Por favor, responda as seguintes perguntas para que possamos montar a sua cotação:\n- Ano de construção\n- Numero de Frações\n- Numero de Andares\n- Despesas 2024\n- Orçamento 2025\n- Fracoes com dividas\n- Valor total divida\n- Porteiro sim/nao\n- Garagem sim/nao",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          700
        ],
        "id": "1a10ea7f-75d8-4555-b458-5fceb563e7a0",
        "name": "Ask for condominium details Response"
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "chat_session_metadata",
          "filters": {
            "conditions": [
              {
                "keyName": "phone_number",
                "keyValue": "={{ $json.phone_number }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -280,
          280
        ],
        "id": "de1dca72-a0a4-4337-b28f-abfd414b859b",
        "name": "Get Session Metadata",
        "alwaysOutputData": true,
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "e9a8abc6-a070-4813-a090-7ef470ad2939",
                "name": "body",
                "value": "=O número {{ $('When Executed by Another Workflow').item.json.phone_number }} fez uma solicitação para falar diretamente com o time Comercial.\n\nFale diretamente com ele no WhatsApp pelo link https://wa.me/{{ $('When Executed by Another Workflow').item.json.phone_number }}?text=Ol%C3%A1%2C%20tudo%20bem%3F%0AFa%C3%A7o%20parte%20do%20time%20comercial%20da%20MisterCondo%2C%20como%20posso%20ajudar%20hoje%3F",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -40,
          520
        ],
        "id": "f7bfd16c-d387-40a8-ab41-617a9546be85",
        "name": "MisterCondo - Talk to sales Response"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "efa32620-e775-41b5-82d9-2f2ed655e3f9",
                "name": "body",
                "value": "=O número {{ $('When Executed by Another Workflow').item.json.phone_number }} fez uma solicitação de proposta para os detalhes abaixo.\n\nFale diretamente com ele no WhatsApp pelo link https://wa.me/{{ $('When Executed by Another Workflow').item.json.phone_number }}?text=Ol%C3%A1%2C%20tudo%20bem%3F%0AFa%C3%A7o%20parte%20do%20time%20comercial%20da%20MisterCondo%2C%20como%20posso%20ajudar%20hoje%3F\n\nInformações fornecidas:\n{{ $('When Executed by Another Workflow').item.json.message_body }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          200,
          120
        ],
        "id": "64743b57-6fb6-45f3-bc43-49c41adb3e11",
        "name": "MisterCondo - Ask for proposal Response"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "fbffac5e-b596-40c0-a13e-c4f9f90917b4",
                "leftValue": "={{ $json.phone_number }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "exists",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -40,
          280
        ],
        "id": "9f8632e8-a394-4e08-9bec-5bdc91841374",
        "name": "If has session_metadata"
      },
      {
        "parameters": {
          "operation": "send",
          "phoneNumberId": "={{ $('When Executed by Another Workflow').item.json.system_phone_number_id }}",
          "recipientPhoneNumber": "5511976217868",
          "textBody": "={{ $json.body }}",
          "additionalFields": {},
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          420,
          120
        ],
        "id": "2e2718c8-2a6f-40bf-84f1-2838802e86d8",
        "name": "MisterCondo - WhatsApp Contact",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "operation": "send",
          "phoneNumberId": "={{ $('When Executed by Another Workflow').item.json.system_phone_number_id }}",
          "recipientPhoneNumber": "5511976217868",
          "textBody": "={{ $json.body }}",
          "additionalFields": {},
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          200,
          520
        ],
        "id": "33e67ee3-b4a3-4c78-b07f-27986eca8339",
        "name": "MisterCondo - WhatsApp Contact 1",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        }
      },
      {
        "parameters": {
          "operation": "delete",
          "tableId": "chat_session_metadata",
          "filters": {
            "conditions": [
              {
                "keyName": "phone_number",
                "condition": "eq",
                "keyValue": "={{ $('When Executed by Another Workflow').item.json.phone_number }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          640,
          120
        ],
        "id": "0c14a4a0-cfd5-46da-bf33-3c475ff512cb",
        "name": "Delete Session Metadata",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "a8608fb8-9159-4aad-842c-44c2312fc5ef",
                "name": "body",
                "value": "Repassei as informações que forneceu e seu contato para o time comercial.\nEles entraram em contato assim que possível.",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          860,
          120
        ],
        "id": "e3917adf-abac-4e4f-8d59-4ce8f3b39659",
        "name": "Ask for proposal Response"
      }
    ],
    "connections": {
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Switch by message_type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Not Supported Response": {
        "main": [
          []
        ]
      },
      "Initial Response": {
        "main": [
          []
        ]
      },
      "Information Not Found Response": {
        "main": [
          [
            {
              "node": "Information Not Found Response1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upsert chat_session_metadata": {
        "main": [
          [
            {
              "node": "Ask for condominium details Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch by message_type": {
        "main": [
          [
            {
              "node": "Initial Response",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Not Supported Response",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Get Session Metadata",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Switch by message_id",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch by message_id": {
        "main": [
          [
            {
              "node": "MisterCondo - Talk to sales Response",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Upsert chat_session_metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Session Metadata": {
        "main": [
          [
            {
              "node": "If has session_metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MisterCondo - Talk to sales Response": {
        "main": [
          [
            {
              "node": "MisterCondo - WhatsApp Contact 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MisterCondo - Ask for proposal Response": {
        "main": [
          [
            {
              "node": "MisterCondo - WhatsApp Contact",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If has session_metadata": {
        "main": [
          [
            {
              "node": "MisterCondo - Ask for proposal Response",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Information Not Found Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MisterCondo - WhatsApp Contact 1": {
        "main": [
          [
            {
              "node": "Talk to sales Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MisterCondo - WhatsApp Contact": {
        "main": [
          [
            {
              "node": "Delete Session Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Session Metadata": {
        "main": [
          [
            {
              "node": "Ask for proposal Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "json": {
            "message_type": "information_not_found.text",
            "message_body": "- Ano de construção: 2024\n- Numero de Frações: 1200\n- Numero de Andares: 3\n- Despesas 2024: R$200\n- Orçamento 2025: R$300\n- Fracoes com dividas: 600\n- Valor total divida: R$100\n- Porteiro sim/nao: não\n- Garagem sim/nao: sim",
            "phone_number": "5511976217868",
            "system_phone_number_id": "615396718313030",
            "current_user": {}
          }
        }
      ]
    },
    "versionId": "e9a6f5a5-1d78-454e-ae90-6c3b506f5476",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-03-19T00:07:39.864Z",
    "updatedAt": "2025-03-21T17:49:28.034Z",
    "id": "m50zdIgN7G1VHM9w",
    "name": "Jira Ticket Quantity of Affected People",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "numberInputs": 3
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          0,
          0
        ],
        "id": "02fbe16d-e68d-46a3-a315-dbdee6cc2355",
        "name": "Merge Electricity Rows"
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -540,
          0
        ],
        "id": "ca7c4f62-263d-4c99-84f0-ce7e51ae9876",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          220,
          0
        ],
        "id": "4e3326f3-0aeb-4245-b9a9-81421644057f",
        "name": "Aggregate Sections"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "29c14cd9-89f7-4244-a029-fc1a38676c3a",
                "name": "body",
                "value": "Por favor, escolha a quantidade de pessoas afetadas pelo problema",
                "type": "string"
              },
              {
                "id": "ea690f1a-8e16-411c-be1e-bda77a5088c2",
                "name": "button",
                "value": "Pessoas afetadas",
                "type": "string"
              },
              {
                "id": "82b72e44-66b1-4fed-9d5f-4a2012e2fc7d",
                "name": "sections",
                "value": "=[\n  {\n    \"title\": \"\",\n    \"rows\": {{ $json.data.toJsonString() }}\n  }\n]",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          440,
          0
        ],
        "id": "836be73f-0eae-4d8b-9e97-c8058643485c",
        "name": "Edit Fields"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_qty_affected.1",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Todos os moradores",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          -160
        ],
        "id": "935256c7-2af6-4d48-81c2-677ea51094df",
        "name": "Everyone Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_qty_affected.3",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Todos no meu piso",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          0
        ],
        "id": "ba4bc0f7-c5e0-4e96-b557-c219637e0896",
        "name": "Everybody in my floor Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_qty_affected.4",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Somente eu",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          180
        ],
        "id": "bd440cb1-1665-4482-85ad-a9061556dca7",
        "name": "Just me Row"
      }
    ],
    "connections": {
      "Merge Electricity Rows": {
        "main": [
          [
            {
              "node": "Aggregate Sections",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Everyone Row",
              "type": "main",
              "index": 0
            },
            {
              "node": "Everybody in my floor Row",
              "type": "main",
              "index": 0
            },
            {
              "node": "Just me Row",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate Sections": {
        "main": [
          [
            {
              "node": "Edit Fields",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Everyone Row": {
        "main": [
          [
            {
              "node": "Merge Electricity Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Everybody in my floor Row": {
        "main": [
          [
            {
              "node": "Merge Electricity Rows",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Just me Row": {
        "main": [
          [
            {
              "node": "Merge Electricity Rows",
              "type": "main",
              "index": 2
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {},
    "versionId": "f4a83c81-517d-47f9-b5ba-cba273c527cd",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-03-11T11:26:56.573Z",
    "updatedAt": "2025-04-23T12:39:49.518Z",
    "id": "T8pSUTXESqT74fwb",
    "name": "Feedback Workflow",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT u.*, csm.*\nFROM chat_session_metadata csm\nJOIN users u on u.id = csm.user_id\nWHERE csm.last_interaction_time < $1\nAND csm.active_session_type in ('ask_questions');",
          "options": {
            "queryReplacement": "='{{ $now.minus(4, \"minutes\").set({ seconds: 59, milliseconds: 0 }).toString() }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          240,
          -140
        ],
        "id": "a50be987-847d-4d5b-bec1-1debbbb08e23",
        "name": "Select Old Chat Session Metadata",
        "executeOnce": false,
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://graph.facebook.com/v22.0/615396718313030/messages",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "whatsAppApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $json.phone_number }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"list\",\n    \"body\": {\n      \"text\": \"{{ $json.body }}\"\n    },\n    \"action\": {{ $json.action.toJsonString() }}\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1800,
          200
        ],
        "id": "4b2bd921-083b-45c6-97ec-fe86a695fc3e",
        "name": "WhatsApp Reply List",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "817bc05d-8c7e-40aa-a557-4a162e85670b",
                "name": "phone_number",
                "value": "={{ $json.phone_number }}",
                "type": "string"
              },
              {
                "id": "183ccb59-a9a4-4551-b0e8-e60f55425751",
                "name": "body",
                "value": "Como está alguns minutos sem responder gostaria de perguntar se as respostas foram úteis, para que possa encerrar a conversa.",
                "type": "string"
              },
              {
                "id": "bdcd6d53-5f3e-4d79-9cf4-67c7c70b85dc",
                "name": "action",
                "value": "{\n  \"button\": \"A resposta foi útil?\",\n  \"sections\": [\n    {\n      \"rows\": [\n        {\n          \"id\": \"feedback.1\",\n          \"title\": \"⭐\"\n        },\n        {\n          \"id\": \"feedback.2\",\n          \"title\": \"⭐⭐\"\n        },\n        {\n          \"id\": \"feedback.3\",\n          \"title\": \"⭐⭐⭐\"\n        },\n        {\n          \"id\": \"feedback.4\",\n          \"title\": \"⭐⭐⭐⭐\"\n        },\n        {\n          \"id\": \"feedback.5\",\n          \"title\": \"⭐⭐⭐⭐⭐\"\n        }\n      ]\n    }\n  ]\n}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1580,
          200
        ],
        "id": "a58232ca-e116-4f76-b9d0-237c51b9511a",
        "name": "Feedback Response"
      },
      {
        "parameters": {
          "inputSource": "jsonExample",
          "jsonExample": "{\n  \"user_id\": 123,\n  \"user_phone_number\": \"5511999999999\",\n  \"message_type\": \"feedback.two\",\n  \"message_id\": \"feedback.2\",\n  \"message_body\": \"⭐⭐\"\n}"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          0,
          -380
        ],
        "id": "61bc9c92-8468-42a0-b7d9-43814b852061",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "665d2119-9e6c-4022-ad80-965a5599bc11",
                "name": "body",
                "value": "Obrigado pela sua resposta!",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          660,
          -380
        ],
        "id": "b9422c7b-72c0-4113-ad17-a22cb2d954fe",
        "name": "Set Response"
      },
      {
        "parameters": {
          "operation": "update",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_session_metadata",
            "mode": "list",
            "cachedResultName": "chat_session_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "user_id": "={{ $('Loop Over Sessions').item.json.id }}",
              "last_interaction_time": "={{ $now.toUTC() }}",
              "active_session_type": "feedback",
              "phone_number": "={{ $json.phone_number }}"
            },
            "matchingColumns": [
              "user_id",
              "phone_number"
            ],
            "schema": [
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "active_session_type",
                "displayName": "active_session_type",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "last_interaction_time",
                "displayName": "last_interaction_time",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true
              },
              {
                "id": "data",
                "displayName": "data",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "object",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "phone_number",
                "displayName": "phone_number",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          920,
          340
        ],
        "id": "99bf0737-83dc-42e5-a3b0-3683164b7017",
        "name": "Update Chat Session Metadata",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          440,
          100
        ],
        "id": "66abd5b3-ae5a-4203-abfc-2e5b6c793026",
        "name": "Loop Over Sessions"
      },
      {
        "parameters": {
          "operation": "deleteTable",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_session_metadata",
            "mode": "list",
            "cachedResultName": "chat_session_metadata"
          },
          "deleteCommand": "delete",
          "where": {
            "values": [
              {
                "column": "user_id",
                "value": "={{ $('When Executed by Another Workflow').item.json.user_id }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          220,
          -380
        ],
        "id": "d760092f-0d56-472a-b31b-dc78abc912fe",
        "name": "Delete User Active Session",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          1140,
          -40
        ],
        "id": "16c0edb4-4c1a-45c6-8dfc-9f7f58cb06a3",
        "name": "Aggregate"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "25d66ccd-606a-41ae-9d25-5bd90371ea03",
                "leftValue": "={{ $json.success }}",
                "rightValue": "",
                "operator": {
                  "type": "boolean",
                  "operation": "notExists",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          900,
          -40
        ],
        "id": "feb1212c-fbcf-4ae4-8395-100a1074418a",
        "name": "If Active Session Deleted",
        "executeOnce": false
      },
      {
        "parameters": {
          "operation": "send",
          "phoneNumberId": "615396718313030",
          "recipientPhoneNumber": "={{ $json.phone_number }}",
          "textBody": "Para sua conveniência irei encerrar a conversa.\nCaso possua mais alguma dúvida ou queira notificar uma ocorrência, por favor, entre em contato novamente.",
          "additionalFields": {},
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.whatsApp",
        "typeVersion": 1,
        "position": [
          1800,
          20
        ],
        "id": "50d0305e-cc8e-43e1-a340-580757cb2c7e",
        "name": "WhatsApp Business Cloud",
        "credentials": {
          "whatsAppApi": {
            "id": "N8TZ2ODxDMt1LURE",
            "name": "WhatsApp account"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "8291bb42-1c76-45cc-909b-549cfe4e122d",
                "name": "message",
                "value": "={\n  \"type\": \"{{ $json.message.type }}\",\n  \"content\": \"{{ $json.message.content }}\"\n}",
                "type": "object"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1360,
          340
        ],
        "id": "cd19e6fb-269b-4604-a399-f7b43939d021",
        "name": "Set Message"
      },
      {
        "parameters": {
          "fieldsToSummarize": {
            "values": [
              {
                "aggregation": "concatenate",
                "field": "message"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.summarize",
        "typeVersion": 1.1,
        "position": [
          920,
          560
        ],
        "id": "75eb21af-7a8c-486d-aede-ec971c53dc31",
        "name": "Summarize Messages"
      },
      {
        "parameters": {
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "feedbacks",
            "mode": "list",
            "cachedResultName": "feedbacks"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "user_id": "={{ $('Loop Over Sessions').item.json.id }}",
              "date": "={{ $now.toUTC() }}",
              "chat": "=[{{ $json.concatenated_message }}]"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": false,
                "defaultMatch": true,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "user_id",
                "displayName": "user_id",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true
              },
              {
                "id": "chat",
                "displayName": "chat",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "rating",
                "displayName": "rating",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "date",
                "displayName": "date",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1140,
          560
        ],
        "id": "7eda42f9-8880-4cff-8d94-b6f2cdac8a98",
        "name": "Insert Feedback",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "deleteTable",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_histories",
            "mode": "list",
            "cachedResultName": "chat_histories"
          },
          "deleteCommand": "delete",
          "where": {
            "values": [
              {
                "column": "session_id",
                "value": "={{ $('Loop Over Sessions').item.json.id }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1360,
          560
        ],
        "id": "75d72a26-d071-4d94-9387-66f822244019",
        "name": "Delete User Chat Histories",
        "alwaysOutputData": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "select",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "chat_histories",
            "mode": "list",
            "cachedResultName": "chat_histories"
          },
          "returnAll": true,
          "where": {
            "values": [
              {
                "column": "session_id",
                "value": "={{ $('Loop Over Sessions').item.json.id }}"
              }
            ]
          },
          "sort": {
            "values": [
              {
                "column": "id"
              }
            ]
          },
          "options": {
            "outputColumns": [
              "message"
            ]
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1140,
          340
        ],
        "id": "8144bf38-efd2-470a-bdad-71199fb3b128",
        "name": "Select messages in Chat Histories",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "update feedbacks\nset rating = $1\nwhere rating is null\n  and id in (\n    select max(id)\n    from feedbacks\n    where user_id = $2\n      and rating is null\n  );",
          "options": {
            "queryReplacement": "={{ $('When Executed by Another Workflow').item.json.message_id.replace(\"feedback.\", \"\").toNumber() }}, {{ $('When Executed by Another Workflow').item.json.user_id }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          440,
          -380
        ],
        "id": "edccd8c4-544c-4076-8f41-22b7b399dc2f",
        "name": "Update Latest Feedback Rating",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "DELETE FROM chat_session_medias\nWHERE user_id in ($1);",
          "options": {
            "queryReplacement": "={{ $json.data.filter(({ user_id }) => user_id).map(({ user_id }) => user_id).join(\",\") }}"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1360,
          -200
        ],
        "id": "f91bff55-ab6d-4cb4-aeb1-f25ad0b440e2",
        "name": "Delete Chat Medias",
        "alwaysOutputData": false,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "DELETE FROM chat_session_metadata\nWHERE (last_interaction_time at time zone 'utc') < $1\n  AND active_session_type in ('feedback', 'create_ticket', 'ask_for_proposal')\nRETURNING user_id, phone_number, last_interaction_time;",
          "options": {
            "queryReplacement": "='{{ $now.toUTC().minus(5, \"minutes\").set({ seconds: 59, milliseconds: 0 }) }}'"
          }
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          680,
          -40
        ],
        "id": "c2446f08-830c-4923-b574-868a8c774b03",
        "name": "Delete Active Sessions",
        "executeOnce": true,
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "5a02a575-a069-4c0f-b4c4-17596d419f4e",
          "options": {
            "allowedOrigins": "*",
            "ignoreBots": false,
            "noResponseBody": true
          }
        },
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2,
        "position": [
          20,
          100
        ],
        "id": "85a70d8c-7dd7-4ac8-a529-da148b0b4af6",
        "name": "Webhook",
        "webhookId": "5a02a575-a069-4c0f-b4c4-17596d419f4e"
      },
      {
        "parameters": {
          "fieldToSplitOut": "body",
          "options": {}
        },
        "type": "n8n-nodes-base.splitOut",
        "typeVersion": 1,
        "position": [
          240,
          100
        ],
        "id": "30390211-b4c3-46b5-b80e-4f6bc171749f",
        "name": "Split Out"
      },
      {
        "parameters": {
          "mode": "chooseBranch",
          "useDataOfInput": 2
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          1360,
          20
        ],
        "id": "a7be057f-1ab0-4cb1-9b64-515fa5bbbe1b",
        "name": "Merge"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "6cefbbfd-6cee-4dea-9c1d-f5c80d09af16",
                "leftValue": "={{ $json.active_session_type }}",
                "rightValue": "ask_questions",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              },
              {
                "id": "082711ce-7d13-48a1-9499-08c5ae3559bd",
                "leftValue": "={{ $json.user_id }}",
                "rightValue": "",
                "operator": {
                  "type": "number",
                  "operation": "exists",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          900,
          120
        ],
        "id": "09ea98d8-8377-409d-a22a-fbdda24b31d7",
        "name": "If  old session metadata is ask_questions and has user_id"
      },
      {
        "parameters": {
          "fieldToSplitOut": "data",
          "options": {}
        },
        "type": "n8n-nodes-base.splitOut",
        "typeVersion": 1,
        "position": [
          1580,
          20
        ],
        "id": "a5134766-f511-4440-a427-6d8e6d774f5c",
        "name": "Split Deleted Active Sessions"
      }
    ],
    "connections": {
      "Select Old Chat Session Metadata": {
        "main": [
          []
        ]
      },
      "Feedback Response": {
        "main": [
          [
            {
              "node": "WhatsApp Reply List",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Delete User Active Session",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Chat Session Metadata": {
        "main": [
          [
            {
              "node": "Select messages in Chat Histories",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Sessions": {
        "main": [
          [
            {
              "node": "Delete Active Sessions",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If  old session metadata is ask_questions and has user_id",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete User Active Session": {
        "main": [
          [
            {
              "node": "Update Latest Feedback Rating",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate": {
        "main": [
          [
            {
              "node": "Delete Chat Medias",
              "type": "main",
              "index": 0
            },
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "If Active Session Deleted": {
        "main": [
          [
            {
              "node": "Aggregate",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Message": {
        "main": [
          [
            {
              "node": "Summarize Messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Summarize Messages": {
        "main": [
          [
            {
              "node": "Insert Feedback",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Insert Feedback": {
        "main": [
          [
            {
              "node": "Delete User Chat Histories",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete User Chat Histories": {
        "main": [
          [
            {
              "node": "Loop Over Sessions",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Select messages in Chat Histories": {
        "main": [
          [
            {
              "node": "Set Message",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update Latest Feedback Rating": {
        "main": [
          [
            {
              "node": "Set Response",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Chat Medias": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Active Sessions": {
        "main": [
          [
            {
              "node": "If Active Session Deleted",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "Split Out",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Out": {
        "main": [
          [
            {
              "node": "Loop Over Sessions",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "Split Deleted Active Sessions",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If  old session metadata is ask_questions and has user_id": {
        "main": [
          [
            {
              "node": "Feedback Response",
              "type": "main",
              "index": 0
            },
            {
              "node": "Update Chat Session Metadata",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Loop Over Sessions",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Deleted Active Sessions": {
        "main": [
          [
            {
              "node": "WhatsApp Business Cloud",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Every 5 minutes": {
        "recurrenceRules": []
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "json": {
            "user_id": 0,
            "user_phone_number": "5511976217868",
            "message_type": "feedback.two",
            "message_id": "feedback.2",
            "message_body": "⭐⭐"
          }
        }
      ],
      "Webhook": [
        {
          "json": {
            "headers": {
              "host": "lenient-really-badger.ngrok-free.app",
              "user-agent": "Deno/1.45.2 (variant; SupabaseEdgeRuntime/1.67.3)",
              "content-length": "329",
              "accept": "*/*",
              "accept-encoding": "gzip, br",
              "accept-language": "*",
              "content-type": "application/json",
              "x-forwarded-for": "2600:1f1e:229:a901:f4bf:a607:ff2e:cffb",
              "x-forwarded-host": "lenient-really-badger.ngrok-free.app",
              "x-forwarded-proto": "https"
            },
            "params": {},
            "query": {},
            "body": [
              {
                "user_id": null,
                "active_session_type": "ask_for_proposal",
                "last_interaction_time": "2025-04-23T11:32:34.713603",
                "data": {},
                "phone_number": "5511976217868",
                "user": null
              },
              {
                "user_id": null,
                "active_session_type": "ask_for_proposal",
                "last_interaction_time": "2025-04-23T11:32:34.713603",
                "data": {},
                "phone_number": "5511976217869",
                "user": null
              }
            ],
            "webhookUrl": "https://lenient-really-badger.ngrok-free.app/webhook/5a02a575-a069-4c0f-b4c4-17596d419f4e",
            "executionMode": "production"
          }
        }
      ]
    },
    "versionId": "45271d29-0231-400b-be0d-60951a9ad31d",
    "triggerCount": 1,
    "tags": []
  },
  {
    "createdAt": "2025-04-24T11:32:41.652Z",
    "updatedAt": "2025-04-24T11:32:41.652Z",
    "id": "VrHZLncNn5kImFbb",
    "name": "Exporter",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "type": "n8n-nodes-base.manualTrigger",
        "typeVersion": 1,
        "position": [
          -300,
          -60
        ],
        "id": "2eeefaab-028c-4151-8ddb-06d8d8ef6fca",
        "name": "When clicking ‘Test workflow’"
      }
    ],
    "connections": {},
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {},
    "versionId": "84a973a6-f129-4057-9776-2be09ad521a7",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-03-18T13:24:32.537Z",
    "updatedAt": "2025-03-25T16:17:10.554Z",
    "id": "DWQU6MjNQr6yBKxN",
    "name": "Jira Ticket Type",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "title",
                "value": "Eletricidade",
                "type": "string"
              },
              {
                "id": "1c8c39f8-a8df-4db2-bf60-213b5bbf8873",
                "name": "rows",
                "value": "={{ $json.data }}",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          460,
          -100
        ],
        "id": "8e99d571-2c32-44ea-9f5e-ce4b24601a57",
        "name": "Electricity Section"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_type.electricity.lights",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Iluminação do corredor",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          -260
        ],
        "id": "85332c43-9546-405b-869d-d3a94a05a22a",
        "name": "Lights Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_type.electricity.power_shortage",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Falta de energia",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          -100
        ],
        "id": "b8f73a5b-51e7-4240-a2a1-a374e78e9732",
        "name": "Power Shortage Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_type.security.broken_cameras",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Cameras quebradas",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          80
        ],
        "id": "84987ec4-c6dc-446b-a0ca-5eb60b3a9234",
        "name": "Broken Cameras Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "id",
                "value": "ticket_type.security.eletric_fences",
                "type": "string"
              },
              {
                "id": "e2a269d5-f104-4804-9f3d-a1901624443e",
                "name": "title",
                "value": "Cercas elétricas",
                "type": "string"
              },
              {
                "id": "c4da330d-2f70-45a7-b692-1c19de06219f",
                "name": "description",
                "value": "",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -240,
          240
        ],
        "id": "5672b2cf-9936-470f-83ca-b1846692336d",
        "name": "Eletric Fences Row"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "6bcefa09-fec5-400c-93f0-2e4f8e00fa1c",
                "name": "title",
                "value": "Segurança",
                "type": "string"
              },
              {
                "id": "1c8c39f8-a8df-4db2-bf60-213b5bbf8873",
                "name": "rows",
                "value": "={{ $json.data }}",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          460,
          80
        ],
        "id": "dfa76d54-afa3-4afb-8fcf-282e8b503cfc",
        "name": "Security Section"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          0,
          -100
        ],
        "id": "881b5d40-cc49-4e99-8036-70e9081d365a",
        "name": "Merge Electricity Rows"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          220,
          -100
        ],
        "id": "37652139-f2eb-43cf-9d69-acb42357009e",
        "name": "Aggregate Electricity Section Rows"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          0,
          80
        ],
        "id": "e4b7b8c8-d570-4341-a937-cddf57538fb2",
        "name": "Merge Security Rows"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          220,
          80
        ],
        "id": "8679af0c-f670-43cd-8617-41f8a48dcd92",
        "name": "Aggregate Security Section Rows"
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -540,
          0
        ],
        "id": "4dd1326d-bef6-494d-92f4-529ecee7281c",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3,
        "position": [
          700,
          0
        ],
        "id": "534bdae1-d00c-4a52-8199-57988d7e0204",
        "name": "Merge All Sections"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          920,
          0
        ],
        "id": "9a9ed48c-6ff5-4c38-a962-9794b6816990",
        "name": "Aggregate Sections"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "29c14cd9-89f7-4244-a029-fc1a38676c3a",
                "name": "body",
                "value": "Por favor, escolha o tipo de ocorrência que deseja abrir chamado.",
                "type": "string"
              },
              {
                "id": "70abee22-edd7-400c-85e8-06d7d0aeb64c",
                "name": "button",
                "value": "Tipo de ocorrência",
                "type": "string"
              },
              {
                "id": "82b72e44-66b1-4fed-9d5f-4a2012e2fc7d",
                "name": "sections",
                "value": "={{ $json.data }}",
                "type": "array"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1140,
          0
        ],
        "id": "2e2152cb-1638-42bb-8029-0ebcf1176260",
        "name": "Edit Fields"
      }
    ],
    "connections": {
      "Electricity Section": {
        "main": [
          [
            {
              "node": "Merge All Sections",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Lights Row": {
        "main": [
          [
            {
              "node": "Merge Electricity Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Power Shortage Row": {
        "main": [
          [
            {
              "node": "Merge Electricity Rows",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Broken Cameras Row": {
        "main": [
          [
            {
              "node": "Merge Security Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Eletric Fences Row": {
        "main": [
          [
            {
              "node": "Merge Security Rows",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Security Section": {
        "main": [
          [
            {
              "node": "Merge All Sections",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Merge Electricity Rows": {
        "main": [
          [
            {
              "node": "Aggregate Electricity Section Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate Electricity Section Rows": {
        "main": [
          [
            {
              "node": "Electricity Section",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge Security Rows": {
        "main": [
          [
            {
              "node": "Aggregate Security Section Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate Security Section Rows": {
        "main": [
          [
            {
              "node": "Security Section",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Lights Row",
              "type": "main",
              "index": 0
            },
            {
              "node": "Power Shortage Row",
              "type": "main",
              "index": 0
            },
            {
              "node": "Broken Cameras Row",
              "type": "main",
              "index": 0
            },
            {
              "node": "Eletric Fences Row",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge All Sections": {
        "main": [
          [
            {
              "node": "Aggregate Sections",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate Sections": {
        "main": [
          [
            {
              "node": "Edit Fields",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {
      "Edit Fields": [
        {
          "json": {
            "body": "Por favor, escolha o tipo de ocorrência que deseja abrir chamado.",
            "sections": [
              {
                "title": "Eletricidade",
                "rows": [
                  {
                    "id": "ticket_type.electricity.lights",
                    "title": "Iluminação",
                    "description": ""
                  },
                  {
                    "id": "ticket_type.electricity.power_shortage",
                    "title": "Falta de energia",
                    "description": ""
                  }
                ]
              },
              {
                "title": "Segurança",
                "rows": [
                  {
                    "id": "ticket_type.security.broken_cameras",
                    "title": "Cameras quebradas",
                    "description": ""
                  },
                  {
                    "id": "ticket_type.security.eletric_fences",
                    "title": "Cercas elétricas",
                    "description": ""
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "versionId": "a00fb1ac-2871-40c6-b7de-6075cbbfdac3",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-02-26T22:36:50.812Z",
    "updatedAt": "2025-04-23T11:36:15.341Z",
    "id": "44mBTPOhCDeUkjmK",
    "name": "Ingest Files",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "cfeac627-1707-4f3f-b44a-e0920040121d",
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "application/vnd.google-apps.spreadsheet",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Google Spreadsheet"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "4b8b4224-256c-4226-8db1-f29d8fdfeccb",
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "XLSX"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "ae23c5e3-3688-4207-9fcd-9b7a04196dca",
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "text/csv",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "CSV"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "f1f70b1f-d391-4794-a113-5d129a3d56e4",
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "DOCX"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "application/pdf",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "PDF"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "5a096be4-1483-4fd0-a59e-71e779edc9d0",
                      "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                      "rightValue": "text/html",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "HTML"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          580,
          140
        ],
        "id": "dbf8b661-4a71-44f6-9feb-c4b4c534d6eb",
        "name": "Switch by File type"
      },
      {
        "parameters": {
          "operation": "text",
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1120,
          220
        ],
        "id": "bc8b4af9-d24c-4b24-85a6-ba04910f562e",
        "name": "Extract from Doc"
      },
      {
        "parameters": {
          "operation": "pdf",
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1120,
          380
        ],
        "id": "1bfeafd7-cc33-481f-abed-1826021a3941",
        "name": "Extract from PDF"
      },
      {
        "parameters": {
          "fieldsToSummarize": {
            "values": [
              {
                "aggregation": "concatenate",
                "field": "data"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.summarize",
        "typeVersion": 1.1,
        "position": [
          1540,
          -140
        ],
        "id": "abcf8563-dac8-4676-b902-067d544a8fe9",
        "name": "Summarize"
      },
      {
        "parameters": {
          "jsonMode": "expressionData",
          "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
          "options": {
            "metadata": {
              "metadataValues": [
                {
                  "name": "condominium_id",
                  "value": "={{ $('Loop Over Items').item.json.parents[0] }}"
                },
                {
                  "name": "file_id",
                  "value": "={{ $('Loop Over Items').item.json.id }}"
                }
              ]
            }
          }
        },
        "id": "9e876a00-1fcc-4fac-94dc-fb7d23d52663",
        "name": "Data Loader",
        "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
        "typeVersion": 1,
        "position": [
          1920,
          720
        ]
      },
      {
        "parameters": {
          "operation": "xlsx",
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1020,
          -380
        ],
        "id": "8303e8c6-ac39-4cf3-bf5b-fd2a9bf05d1c",
        "name": "Extract Residents from XLSX"
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": {
            "__rl": true,
            "value": "={{ $('Set File Info').item.json.id }}",
            "mode": "id"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          380,
          200
        ],
        "id": "96688502-e721-4b44-85c4-e0f74cf37703",
        "name": "Download File",
        "executeOnce": true,
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "AK6Ai2Pd7cZvY6gL",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          -1100,
          200
        ],
        "id": "23c21eef-83d0-4c66-9c52-4634eaf9e9fa",
        "name": "When Executed by Another Workflow"
      },
      {
        "parameters": {
          "operation": "delete",
          "tableId": "condominium_documents",
          "filterType": "string",
          "filterString": "=metadata->>file_id=like.*{{ $json.id }}"
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -420,
          200
        ],
        "id": "a401244c-deb8-4d56-a89a-c90ab88285bc",
        "name": "Delete Old Docs",
        "alwaysOutputData": true,
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "tableId": "users",
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "nif",
                "fieldValue": "={{ $('If Resident Info is filled').item.json.NIF }}"
              },
              {
                "fieldId": "name",
                "fieldValue": "={{ $('If Resident Info is filled').item.json.Nome }}"
              },
              {
                "fieldId": "phone_number",
                "fieldValue": "={{ $('If Resident Info is filled').item.json['Número de Telefone'] }}"
              },
              {
                "fieldId": "birthdate",
                "fieldValue": "={{ $('If Resident Info is filled').item.json['Data de nascimento'] }}"
              },
              {
                "fieldId": "condominium_id",
                "fieldValue": "={{ $('Loop Over Items').item.json.parents[0] }}"
              },
              {
                "fieldId": "user_type_id",
                "fieldValue": "1"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1740,
          -380
        ],
        "id": "a2c5fa62-0065-4c84-a1cb-a686ce721778",
        "name": "Create User",
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          -800,
          200
        ],
        "id": "199dc2a0-27f0-492d-a843-5b26539a5173",
        "name": "Loop Over Items"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": false,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "7f888d79-c1a1-4ac9-ab1a-afe72b459d1f",
                "leftValue": "={{ $binary.data.fileName }}",
                "rightValue": "moradores",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "or"
          },
          "options": {
            "ignoreCase": true
          }
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          740,
          -140
        ],
        "id": "b8833e62-38ed-4937-847f-3bac3515704d",
        "name": "If is Moradores file"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "a3a5589f-c300-4f27-bcdb-dc1aa137dd9d",
                "leftValue": "={{ $json.NIF }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              },
              {
                "id": "6152ba53-f9e3-4886-884b-a5a1f46cadbb",
                "leftValue": "={{ $json.Nome }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              },
              {
                "id": "5e29a1ba-b2fe-45b3-a126-7d68399544c9",
                "leftValue": "={{ $json['Número de Telefone'] }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          1260,
          -380
        ],
        "id": "4ce906bf-99dc-438f-81e8-cc84caebe38c",
        "name": "If Resident Info is filled"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1120,
          60
        ],
        "id": "c5b8872d-f0e0-4685-8c4e-7f6388825c40",
        "name": "Extract from CSV"
      },
      {
        "parameters": {
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "condominium_document_rows",
            "mode": "list",
            "cachedResultName": "condominium_document_rows"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "dataset_id": "={{ $('Set File Info').item.json.file_id }}",
              "row_data": "={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": false,
                "defaultMatch": true,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "dataset_id",
                "displayName": "dataset_id",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true
              },
              {
                "id": "row_data",
                "displayName": "row_data",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "object",
                "canBeUsedToMatch": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1420,
          200
        ],
        "id": "c6a30da4-0022-478a-b1fd-7ca4e5cfa9d2",
        "name": "Insert Table Rows",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "operation": "upsert",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "condominium_document_metadata",
            "mode": "list",
            "cachedResultName": "condominium_document_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "id": "={{ $('Set File Info').item.json.id }}",
              "schema": "={{ $json.schema }}",
              "title": "={{ $if($('Set File Info').item.json.mimeType == \"text/csv\", $('Set File Info').item.json.title, $('Set File Info').item.json.title + \" página \" + $('Loop Over Sheets').item.json.sheetName) }}",
              "url": "={{ $('Set File Info').item.json.url }}",
              "created_at": "={{ $now.toUTC() }}"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": true,
                "defaultMatch": true,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "title",
                "displayName": "title",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false,
                "removed": false
              },
              {
                "id": "url",
                "displayName": "url",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false,
                "removed": false
              },
              {
                "id": "created_at",
                "displayName": "created_at",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": false
              },
              {
                "id": "schema",
                "displayName": "schema",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          1940,
          -140
        ],
        "id": "146d22c1-a8b2-42c8-aca0-addba26b61ff",
        "name": "Update Schema for Document Metadata",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c44f00c8-eab2-4365-9ea9-96ba855c5525",
                "name": "schema",
                "value": "={{ $json.concatenated_data.parseJson().first().keys().toJsonString() }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1740,
          -140
        ],
        "id": "8125aacb-e900-471e-bd18-fca730a65dde",
        "name": "Set Schema"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "8bb36e20-b979-49df-9699-5d2b21df28e0",
                "name": "id",
                "value": "={{ $json.id }}",
                "type": "string"
              },
              {
                "id": "cb89a56e-8c16-43a2-bc15-8b74329a193d",
                "name": "mimeType",
                "value": "={{ $json.mimeType }}",
                "type": "string"
              },
              {
                "id": "c7ccd187-acea-4dfa-8872-dbc062859a52",
                "name": "url",
                "value": "={{ $json.webViewLink }}",
                "type": "string"
              },
              {
                "id": "0c53b762-5b75-408d-afeb-1fba7722d4a6",
                "name": "title",
                "value": "={{ $json.name }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -600,
          200
        ],
        "id": "42372ebb-cee1-4c57-bdb6-bc80ef8c7801",
        "name": "Set File Info"
      },
      {
        "parameters": {
          "model": "text-embedding-3-small",
          "options": {}
        },
        "id": "b491e7fd-7c06-4788-9651-a74ba2fbbd67",
        "name": "Embeddings OpenAI",
        "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "typeVersion": 1,
        "position": [
          1780,
          720
        ],
        "credentials": {
          "openAiApi": {
            "id": "6VoSug2Bcrcb4Pd3",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "mode": "insert",
          "tableName": {
            "__rl": true,
            "value": "condominium_documents",
            "mode": "list",
            "cachedResultName": "condominium_documents"
          },
          "options": {
            "queryName": "match_documents"
          }
        },
        "id": "3961accd-93a1-49f0-bc90-68cf0aff378e",
        "name": "Insert into Supabase Vectorstore",
        "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "typeVersion": 1,
        "position": [
          1840,
          520
        ],
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "operation": "html",
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          1120,
          540
        ],
        "id": "3d171377-c64d-427a-8c8c-90ac35d9cb7e",
        "name": "Extract from HTML"
      },
      {
        "parameters": {
          "jsCode": "const XLSX = require('xlsx');\n\nconst data = $input.first().binary.data\n\nconst workbook = XLSX.read(data.data)\n\n\nconst result = workbook.SheetNames.map((sheetName) => {\n  return {\n    sheetName,\n    data: XLSX.utils.sheet_to_json(workbook.Sheets[sheetName])\n  }\n  // return {\n  //   mimeType: \"text/html\",\n  //   fileName: sheetName,\n  //   data: new Buffer(XLSX.utils.sheet_to_html(workbook.Sheets[sheetName])).toString('base64')\n  // }\n})\n\nreturn result"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          320,
          -580
        ],
        "id": "5b43e848-0450-4750-a0c9-311b5e858c80",
        "name": "Sheet Splitter"
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "469d5320-0009-4bc6-8821-25ebbdc19123",
        "name": "Recursive Character Text Splitter",
        "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
        "typeVersion": 1,
        "position": [
          2000,
          860
        ]
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "d0ed2ca8-7933-4e09-a660-2a0d432b8e32",
                "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                "rightValue": "text/csv",
                "operator": {
                  "type": "string",
                  "operation": "notEquals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          2140,
          -140
        ],
        "id": "d2f7bc48-7868-4534-afd2-55f1ad5a1a51",
        "name": "If is XLSX"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          1120,
          -140
        ],
        "id": "3525a5df-7176-4442-a897-3e1e30d26f0b",
        "name": "Loop Over Sheets"
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "include": "specifiedFields",
          "fieldsToInclude": "data",
          "options": {}
        },
        "type": "n8n-nodes-base.aggregate",
        "typeVersion": 1,
        "position": [
          1420,
          60
        ],
        "id": "2f9b89a1-43af-4f8f-9f8b-c78e8b61e7c6",
        "name": "Aggregate Rows"
      },
      {
        "parameters": {
          "operation": "delete",
          "tableId": "condominium_document_rows",
          "filters": {
            "conditions": [
              {
                "keyName": "dataset_id",
                "condition": "eq",
                "keyValue": "={{ $('Set File Info').item.json.id }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          -220,
          200
        ],
        "id": "347b4eaf-5c6e-4d8b-8f5d-388d479ea24b",
        "name": "Delete Data Rows",
        "alwaysOutputData": true,
        "credentials": {
          "supabaseApi": {
            "id": "i59LZYEEd30bMO4x",
            "name": "Supabase account"
          }
        }
      },
      {
        "parameters": {
          "operation": "upsert",
          "schema": {
            "__rl": true,
            "mode": "list",
            "value": "public"
          },
          "table": {
            "__rl": true,
            "value": "condominium_document_metadata",
            "mode": "list",
            "cachedResultName": "condominium_document_metadata"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "id": "={{ $('Set File Info').item.json.id }}",
              "title": "={{ $('Set File Info').item.json.title }}",
              "url": "={{ $('Set File Info').item.json.url }}",
              "created_at": "={{ $now.toUTC() }}"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": true,
                "defaultMatch": true,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "title",
                "displayName": "title",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false
              },
              {
                "id": "url",
                "displayName": "url",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false
              },
              {
                "id": "created_at",
                "displayName": "created_at",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": false
              },
              {
                "id": "schema",
                "displayName": "schema",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": false,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          200,
          320
        ],
        "id": "b3344102-717a-4348-8f6a-b0489bf7ecee",
        "name": "Insert Document Metadata",
        "credentials": {
          "postgres": {
            "id": "kk3GzlPM31emTAt8",
            "name": "Postgres account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "fb8193ba-70de-448f-8fc1-9b15a2f39b6f",
                "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              },
              {
                "id": "98e5c170-360f-438f-8cc8-992dcaac02ba",
                "leftValue": "={{ $('Set File Info').item.json.mimeType }}",
                "rightValue": "application/vnd.google-apps.spreadsheet",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "or"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          0,
          200
        ],
        "id": "3bcbf5fa-937d-438c-b48f-ab5597528a96",
        "name": "If is XLSX file"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://dltagg.atlassian.net/rest/api/3/user",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "jiraSoftwareCloudApi",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"emailAddress\": \"{{ $json['E-mail'] }}\",\n  \"displayName\": \"{{ $json.Nome }}\",\n  \"name\": \"{{ $json.Nome }}\",\n  \"notification\": false,\n  \"sendNotification\": false,\n  \"sendInvitation\": false,\n  \"products\": []\n}",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1540,
          -380
        ],
        "id": "6703bb5c-9256-48fe-a695-cc611892a3ca",
        "name": "Create Jira User",
        "credentials": {
          "jiraSoftwareCloudApi": {
            "id": "H0WuZvxS9jRPBrna",
            "name": "Jira SW Cloud account"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://europe-west9-whatsapp-chatbot-455817.cloudfunctions.net/xlsx-sheet-splitter-574238883112/",
          "authentication": "predefinedCredentialType",
          "nodeCredentialType": "googleApi",
          "sendBody": true,
          "contentType": "binaryData",
          "inputDataFieldName": "data",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          940,
          -140
        ],
        "id": "d55cf5ee-13d5-4cb9-a8ee-65f9d6acfb06",
        "name": "XLSX Sheet Splitter",
        "credentials": {
          "googleApi": {
            "id": "uSJtTYw4jwEwPA2l",
            "name": "Google Service Account account"
          }
        }
      }
    ],
    "connections": {
      "Switch by File type": {
        "main": [
          [
            {
              "node": "If is Moradores file",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If is Moradores file",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Extract from CSV",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Extract from Doc",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Extract from PDF",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Extract from HTML",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract from Doc": {
        "main": [
          [
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract from PDF": {
        "main": [
          [
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Summarize": {
        "main": [
          [
            {
              "node": "Set Schema",
              "type": "main",
              "index": 0
            },
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Data Loader": {
        "ai_document": [
          [
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "ai_document",
              "index": 0
            }
          ]
        ]
      },
      "Extract Residents from XLSX": {
        "main": [
          [
            {
              "node": "If Resident Info is filled",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download File": {
        "main": [
          [
            {
              "node": "Switch by File type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Old Docs": {
        "main": [
          [
            {
              "node": "Delete Data Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items": {
        "main": [
          [],
          [
            {
              "node": "Set File Info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create User": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If is Moradores file": {
        "main": [
          [
            {
              "node": "Extract Residents from XLSX",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "XLSX Sheet Splitter",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If Resident Info is filled": {
        "main": [
          [
            {
              "node": "Create Jira User",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract from CSV": {
        "main": [
          [
            {
              "node": "Aggregate Rows",
              "type": "main",
              "index": 0
            },
            {
              "node": "Insert Table Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set Schema": {
        "main": [
          [
            {
              "node": "Update Schema for Document Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set File Info": {
        "main": [
          [
            {
              "node": "Delete Old Docs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Embeddings OpenAI": {
        "ai_embedding": [
          [
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "ai_embedding",
              "index": 0
            }
          ]
        ]
      },
      "Insert into Supabase Vectorstore": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract from HTML": {
        "main": [
          [
            {
              "node": "Insert into Supabase Vectorstore",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Sheet Splitter": {
        "main": [
          []
        ]
      },
      "Recursive Character Text Splitter": {
        "ai_textSplitter": [
          [
            {
              "node": "Data Loader",
              "type": "ai_textSplitter",
              "index": 0
            }
          ]
        ]
      },
      "Update Schema for Document Metadata": {
        "main": [
          [
            {
              "node": "If is XLSX",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If is XLSX": {
        "main": [
          [
            {
              "node": "Loop Over Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Sheets": {
        "main": [
          [],
          [
            {
              "node": "Summarize",
              "type": "main",
              "index": 0
            },
            {
              "node": "Insert Table Rows",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Aggregate Rows": {
        "main": [
          [
            {
              "node": "Summarize",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Delete Data Rows": {
        "main": [
          [
            {
              "node": "If is XLSX file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Insert Document Metadata": {
        "main": [
          [
            {
              "node": "Download File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If is XLSX file": {
        "main": [
          [
            {
              "node": "Download File",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Insert Document Metadata",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create Jira User": {
        "main": [
          [
            {
              "node": "Create User",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "XLSX Sheet Splitter": {
        "main": [
          [
            {
              "node": "Loop Over Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "json": {
            "kind": "drive#file",
            "copyRequiresWriterPermission": false,
            "writersCanShare": true,
            "viewedByMe": true,
            "mimeType": "application/vnd.google-apps.spreadsheet",
            "exportLinks": {
              "application/x-vnd.oasis.opendocument.spreadsheet": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=ods",
              "text/tab-separated-values": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=tsv",
              "application/pdf": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=pdf",
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=xlsx",
              "text/csv": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=csv",
              "application/zip": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=zip",
              "application/vnd.oasis.opendocument.spreadsheet": "https://docs.google.com/spreadsheets/export?id=1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88&exportFormat=ods"
            },
            "parents": [
              "1xUTzzX6Xt0fwA91sl7SEDRGBAq8QTxY5"
            ],
            "thumbnailLink": "https://lh3.googleusercontent.com/drive-storage/AJQWtBNB2LTDAshVdkW_XRCtT0MFWW0pB1KeFFonzYKrPu25lmrPCAoBMQoprojheNh1ewZjUT9IIylY3hBoD42kQ986tXOkmSAziIb8iO5EfF4FB_j0u_Xzd4f6_ZAhNg=s220",
            "iconLink": "https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.spreadsheet",
            "shared": false,
            "lastModifyingUser": {
              "displayName": "Luiz Moura",
              "kind": "drive#user",
              "me": true,
              "permissionId": "13222640052300274131",
              "emailAddress": "luiz.moura@dltagg.com",
              "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64"
            },
            "owners": [
              {
                "displayName": "Luiz Moura",
                "kind": "drive#user",
                "me": true,
                "permissionId": "13222640052300274131",
                "emailAddress": "luiz.moura@dltagg.com",
                "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64"
              }
            ],
            "webViewLink": "https://docs.google.com/spreadsheets/d/1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88/edit?usp=drivesdk",
            "size": "4605",
            "viewersCanCopyContent": true,
            "permissions": [
              {
                "id": "13222640052300274131",
                "displayName": "Luiz Moura",
                "type": "user",
                "kind": "drive#permission",
                "photoLink": "https://lh3.googleusercontent.com/a/ACg8ocLzm59VKnoQoAqdDwXurN3GKM7CMd5-3nl0nFNoAIFfsj2g_A=s64",
                "emailAddress": "luiz.moura@dltagg.com",
                "role": "owner",
                "deleted": false,
                "pendingOwner": false
              }
            ],
            "hasThumbnail": true,
            "spaces": [
              "drive"
            ],
            "id": "1rM2F1Sfp1Dv3WqJE5S26kjArsmdOokex_gy4XYaNy88",
            "name": "Cópia de Informes 2024",
            "starred": false,
            "trashed": false,
            "explicitlyTrashed": false,
            "createdTime": "2025-04-15T00:41:45.966Z",
            "modifiedTime": "2025-04-15T00:41:45.966Z",
            "modifiedByMeTime": "2025-04-15T00:41:45.966Z",
            "viewedByMeTime": "2025-04-15T00:41:45.966Z",
            "quotaBytesUsed": "4605",
            "version": "5",
            "ownedByMe": true,
            "isAppAuthorized": false,
            "capabilities": {
              "canChangeViewersCanCopyContent": true,
              "canEdit": true,
              "canCopy": true,
              "canComment": true,
              "canAddChildren": false,
              "canDelete": true,
              "canDownload": true,
              "canListChildren": false,
              "canRemoveChildren": false,
              "canRename": true,
              "canTrash": true,
              "canReadRevisions": true,
              "canChangeCopyRequiresWriterPermission": true,
              "canMoveItemIntoTeamDrive": true,
              "canUntrash": true,
              "canModifyContent": true,
              "canMoveItemOutOfDrive": true,
              "canAddMyDriveParent": false,
              "canRemoveMyDriveParent": true,
              "canMoveItemWithinDrive": true,
              "canShare": true,
              "canMoveChildrenWithinDrive": false,
              "canModifyContentRestriction": true,
              "canChangeSecurityUpdateEnabled": false,
              "canAcceptOwnership": false,
              "canReadLabels": false,
              "canModifyLabels": false,
              "canModifyEditorContentRestriction": true,
              "canModifyOwnerContentRestriction": true,
              "canRemoveContentRestriction": false,
              "canDisableInheritedPermissions": false,
              "canEnableInheritedPermissions": true
            },
            "thumbnailVersion": "1",
            "modifiedByMe": true,
            "permissionIds": [
              "13222640052300274131"
            ],
            "linkShareMetadata": {
              "securityUpdateEligible": false,
              "securityUpdateEnabled": true
            },
            "inheritedPermissionsDisabled": false
          }
        }
      ]
    },
    "versionId": "98fa5d89-f02d-4999-bdd9-4eb924f799c2",
    "triggerCount": 0,
    "tags": []
  }
]